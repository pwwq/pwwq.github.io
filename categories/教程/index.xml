<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>教程 on Xizi&#39;s Blog</title>
    <link>https://567899.xyz/categories/%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in 教程 on Xizi&#39;s Blog</description>
    <image>
      <title>Xizi&#39;s Blog</title>
      <url>https://567899.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://567899.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.123.8</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 02 Jan 2024 13:27:16 +0800</lastBuildDate>
    <atom:link href="https://567899.xyz/categories/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[更新]Folderclone谷歌Google Drive共享云端硬盘转存相互转移拷贝复制文件的正确姿势</title>
      <link>https://567899.xyz/post/google_drive_folderclone/</link>
      <pubDate>Tue, 11 Feb 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/google_drive_folderclone/</guid>
      <description>超级详细Folderclone使用的图文教程，更新新版Folderclone的使用方法
更新新版folderclone使用方法 详情https://github.com/Spazzlo/folderclone
[可选]加入Google Drive团队盘 没有Google Drive团队盘的小伙伴可以自助添加
英国谢菲尔德大学：https://gdrive.zppcw.cn/ 404 NOT FOUND：https://gd.404edu.workers.dev/ https://gd.zxd.workers.dev/ http://leon.educationhost.cloud/ swccd.edu团队盘：https://teamdrive.xcpx.workers.dev/ 洛杉矶加利福尼亚大学团队盘：https://ucla.ur.workers.dev/ 日本国際大学团队盘：https://iuj.ur.workers.dev/ 自动创建：https://www.teamdrive.workers.dev 感谢大佬提供的Google Drive团队盘
===新版folderclone教程开始===
第一步 安装folderclone Linux
Debian/Ubuntu安装
apt update apt install python3-pip git screen -y git clone https://github.com/Spazzlo/folderclone.git cd folderclone pip3 install folderclone CentOS把apt-get替换成yum
因拷贝时间长，防止中断，强烈建议使用screen后台运行。screen简单使用方法
# 创建screen窗口,folderclone名字可自定义 screen -S folderclone # 临时退出使用screen后台运行,按组合键 【Ctrl】【a】【d】 # 回到screen窗口 screen -r folderclone Windows安装
下载Python安装
Python 3.7.4 64-bit 、 Python 3.8.1
下载folderclone源码并解压，比如我的放置在E:\folderclone-master
以管理员身份运行 cmd或Windows PowerShell执行,且确保本地cmd或Windows PowerShell稳定的外网环境。
# 进入folderclone解压根目录 cd E:\folderclone-master pip install folderclone 第二步 开启Drive API服务 打开登陆Python Quickstart 点击Enable the Drive API</description>
    </item>
    <item>
      <title>WSL2运行Ubuntu子系统并设置开机自动启动应用docker</title>
      <link>https://567899.xyz/post/wsl/</link>
      <pubDate>Tue, 02 Jan 2024 13:27:16 +0800</pubDate>
      <guid>https://567899.xyz/post/wsl/</guid>
      <description>去Microsoft官网下载 Windows 11版本要求23H2+ 打开启用或关闭Windows功能勾选适用于Linux的Windows子系统和Hyper-V重启系统生效 下载WSL2 Linux kernel update package for x64 machines安装。 WSL常用操作 查看WSL版本
wsl --version 可以在运行(win+R)或资源文件管理器的路径里直接输入\\wsl$进入Ubuntu的目录
更新 WSL：
wsl --update --pre-release 关机、重启
wsl --shutdown wsl 其它
# 列出分发版本 wsl -l -v # 关闭指定版本 wsl -t Ubuntu # 启动指定版本 wsl -d Ubuntu 不能使用 systemctl 开启、停止或查看服务的运行，使用这些服务文件有许多功能 {start|stop|reload|force-reload|restart|try-restart|status}，WSL可以使用service或/etc/init.d/,例如
service docker start /etc/init.d/nginx start WSL2+Docker 开机自启 WSL2子系统中的应用默认不会开机自动启动，这里以docker为例，安装docker
wget -qO- get.docker.com | bash 可以手动启动docker
service docker start 不过有时候我们希望它能开机自动启动，接下来使用
WSL2内操作 echo &amp;#34;#! /bin/sh service docker start&amp;#34; &amp;gt; /etc/init.</description>
    </item>
    <item>
      <title>用nginx搭建webdav文件服务器</title>
      <link>https://567899.xyz/post/nginx-webdav/</link>
      <pubDate>Wed, 04 Oct 2023 09:55:56 +0800</pubDate>
      <guid>https://567899.xyz/post/nginx-webdav/</guid>
      <description>安装nginx-full版本
apt install nginx-full 创建一个WebDAV根目录，并授予写入权限。例如，您可以使用以下命令创建并授予权限，/var/www/example.com替换成自己的实际目录路径
mkdir /var/www/example.com chown www-data:www-data /var/www/example.com 增加nginx的认证,这里用的是用户名密码，user就是你要登陆的用户名，/etc/nginx/.htpasswd换成你自己的文件存放路径
sh -c &amp;#34;echo -n &amp;#39;user:&amp;#39; &amp;gt;&amp;gt; /etc/nginx/.htpasswd&amp;#34; sh -c &amp;#34;openssl passwd -apr1 &amp;gt;&amp;gt; /etc/nginx/.htpasswd&amp;#34; 编辑修改nginx配置文件，在server中增加
# webdav配置 # 认证方式 auth_basic &amp;#34;Restricted Content&amp;#34;; # 存放认证用户名、密码文件（确认有对应权限） auth_basic_user_file /etc/nginx/.htpasswd; # dav allowed method dav_methods PUT DELETE MKCOL COPY MOVE; # Allow current scope perform specified DAV method dav_ext_methods PROPFIND OPTIONS; # In this folder, newly created folder or file is to have specified permission.</description>
    </item>
    <item>
      <title>神秘模块sing-box的使用</title>
      <link>https://567899.xyz/post/sing-box-magisk/</link>
      <pubDate>Thu, 08 Jun 2023 13:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/sing-box-magisk/</guid>
      <description>神秘发布渠道为 Telegram 话题组 原始人，启洞！ 下的 “啊？” 话题（特殊时期，已修改为私人群聊）
发送/notes机器人会回复
CFM SFM 交流｜闲聊吹水 中的备忘录列表： - captiveportal - cmfm摆烂版 - disable_flag_secure_magisk_module - eu本地化 - linux命令行与shell脚本编程大全 - log - macrodroid - mt管理器下载 - powertoolsactivity - sing-box部分相关 - stellariumplus星图 - termux - 代理模块地址导航 - 免重启重启神秘 - 固定热点ip - 快速获取多个应用包名 - 最新神秘 - 最新神秘win - 核心相关 - 流浪地球2 - 百度直连 - 神秘开启tproxy模式 - 神秘模块详细教程 - 神秘状态切换 - 神秘的第二种百度献祭模板空格写法 - 禁用ipv6 - 网络是怎样连接的 - 网络联通性测试地址 - 规则文件 - 锐评 - 面板 - 高亮语法 - 鸡蛋问题 您可以使用/get notename 或 #notename 去检索这些备忘录</description>
    </item>
    <item>
      <title>Edge浏览器、Chrome使用扩展Header Editor使用新必应Bing AI</title>
      <link>https://567899.xyz/post/header-editor-bing/</link>
      <pubDate>Thu, 09 Mar 2023 18:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/header-editor-bing/</guid>
      <description>申请加入Bing AI 通过申请链接加入Bing AI等待获得批准通过
浏览器安装Header Editor规则 安装扩展Header Editor
Microsoft Edge Chrome Mozilla 添加2条Header Editor规则，阻止https://www.bing.com跳转到https://cn.bing.com方法如下
^http(s?)://www\.bing\.com/(.*) 头部名称x-forwarded-for头内容8.8.8.8
匹配规则https://cn.bing.com重定向至https://www.bing.com
保存规则后就能愉快的使用https://www.bing.com 不需要魔法了。</description>
    </item>
    <item>
      <title>联通电信移动V2ray免流host http教程</title>
      <link>https://567899.xyz/post/v2ray-http/</link>
      <pubDate>Fri, 09 Sep 2022 09:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/v2ray-http/</guid>
      <description>V2ray服务端的搭建配置 bash &amp;lt;(curl -L https://raw.githubusercontent.com/XTLS/Xray-install/main/install-release.sh) 免流的方案采用Vadminss协议+TCP+HTTP，编辑配置文件/usr/local/etc/xray/config.json，
nano /usr/local/etc/xray/config.json 完整配置示范如下
{ &amp;#34;inbounds&amp;#34;: [ { &amp;#34;port&amp;#34;: 80, &amp;#34;protocol&amp;#34;: &amp;#34;vmess&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;clients&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;这里填写你的UUID&amp;#34; } ] }, &amp;#34;streamSettings&amp;#34;: { &amp;#34;network&amp;#34;: &amp;#34;tcp&amp;#34;, &amp;#34;tcpSettings&amp;#34;: { &amp;#34;header&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;http&amp;#34;, &amp;#34;response&amp;#34;: { &amp;#34;version&amp;#34;: &amp;#34;1.1&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;200&amp;#34;, &amp;#34;reason&amp;#34;: &amp;#34;OK&amp;#34;, &amp;#34;headers&amp;#34;: { &amp;#34;Content-Type&amp;#34;: [&amp;#34;application/octet-stream&amp;#34;, &amp;#34;video/mpeg&amp;#34;], &amp;#34;Transfer-Encoding&amp;#34;: [&amp;#34;chunked&amp;#34;], &amp;#34;Connection&amp;#34;: [&amp;#34;keep-alive&amp;#34;], &amp;#34;Pragma&amp;#34;: &amp;#34;no-cache&amp;#34; } } } } } } ], &amp;#34;outbounds&amp;#34;: [ { &amp;#34;protocol&amp;#34;: &amp;#34;freedom&amp;#34; } ] } 可以通过命令cat /proc/sys/kernel/random/uuid随机生成</description>
    </item>
    <item>
      <title>Cookie自动登陆签到、抓包提取制作HAR文件</title>
      <link>https://567899.xyz/post/qiandao/</link>
      <pubDate>Fri, 11 Mar 2022 22:04:59 +0800</pubDate>
      <guid>https://567899.xyz/post/qiandao/</guid>
      <description>通过自动签到(网页签到、APP签到)，可以有效防止某些站点规则中的因长时间未登陆不活跃而导致封号，还可以赚积分、领金币薅羊毛&amp;hellip;
Docker安装签到 https://hub.docker.com/r/a76yyyy/qiandao
https://github.com/qiandao-today/qiandao
安装、启用docker
wget -qO- get.docker.com | bash systemctl enable docker systemctl start docker Docker部署a76yyyy/qiandao签到
docker run -d --name qiandao --restart=always --env PORT=8923 --net=host -v /root/qiandao:/usr/src/app/config a76yyyy/qiandao 然后就可以访问 http://localhost:8923 网页管理签到
8923端口可以随意，只要不被其它应用占用即可，/root/qiandao宿主机配置文件目录
备份数据库只需要备份/root/qiandao目录下的database.db这个文件即可；
还原数据库只需要先暂停docker stop qiandao然后将database.db复制替换掉原来/root/qiandao目录下的database.db这个文件。
启动容器
docker start qiandao 停止容器
docker stop qiandao 删除容器
docker rm qiandao 获取HAR文件 我们还可以使用Fiddler抓包软件来抓取，这里使用Chrome浏览器示范。
打开Chrome浏览器，新建隐身窗口(重要)，登陆账号： 打开开发者工具（ctrl+shift+I，或者 鼠标右键 &amp;gt; 审查元素） 切换到 Network（网络）面板，勾选 Preserve log (非常重要) 直奔签到页，完成签到 找对签到链接(非常重要)，导出HAR文件。 使用HAR模板文件签到 以PT站点为例，因为大部分PT站点都是使用NexusPHP,大同小异，我们只需要抓取https://example.com/attendance.php保留这个链接，其它统统删掉。然后利用cookie登陆签到。
注册、登陆到网页签到管理，上传导入HAR文件，编辑、删除多余的链接，只需要保留有效、正确的签到链接
编辑HAR模板文件
Request Headers全部勾选；cookie填写为{{cookie}}；Cookies全部删除；
切换到测试/Test在Variables选项ADD中添加name为cookie</description>
    </item>
    <item>
      <title>flexget自动为qbittorrent、transmission等PT客户端添加种子任务</title>
      <link>https://567899.xyz/post/flexget/</link>
      <pubDate>Thu, 23 Dec 2021 19:13:56 +0800</pubDate>
      <guid>https://567899.xyz/post/flexget/</guid>
      <description>https://flexget.com
flexget解决了PT客户端没有RSS订阅功能，实现全自动添加种子任务到qbittorrent、 transmission、 deluge等客户端上,配合使用autoremove-torrents自动删除PT种子文件简直是PT党刷上传流量的必备神器
安装flexget 从pip安装
apt update apt install python3-pip pip3 install flexget flexget配置文件 mkdir .flexget nano .flexget/config.yml 示范配置
templates: # 剩余空间模板，当 path 对应的路径的剩余空间小于 space 规定的数值的时候停止 RSS 下载 单位MB freespace: free_space: path: /home/star space: 10240 # qb 的模板，之后写 qb 就是指把种子推送到 qb 进行下载；下面 tr de rt 也是如此 # 除非你修改了对应客户端的账号密码或者端口号，不然不需要修改这些客户端的模板 qb: qbittorrent: path: /home/SCRIPTUSERNAME/qbittorrent/download/ host: localhost port: 8080 username: admin password: adminadmin tr: transmission: path: /home/SCRIPTUSERNAME/transmission/download/ host: localhost port: 9091 username: SCRIPTUSERNAME password: SCRIPTPASSWORD de: deluge: path: /home/SCRIPTUSERNAME/deluge/download/ host: localhost port: 58846 username: SCRIPTUSERNAME password: SCRIPTPASSWORD # 体积过滤模板，min 是符合条件的最小种子体积，max 是符合条件的最大种子体积，单位均为 MB # strict 默认是 yes，表示在无法确定大小的情况下就不下载，这里把它改成 no 了 # 也就是说，这段 size 的意思是，只下载体积为 6000-666666 MB 的种子，其他不满足条件的种子不下载 size: content_size: min: 10000 max: 66666 strict: no # 任务 tasks: CHDbits: rss: https://chdbits.</description>
    </item>
    <item>
      <title>Tiny File Manager一款简洁的PHP文件管理器</title>
      <link>https://567899.xyz/post/tinyfilemanager/</link>
      <pubDate>Wed, 11 Aug 2021 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/tinyfilemanager/</guid>
      <description>Tiny File Manager一款简洁的PHP文件管理器
Tiny File Manager Demo GitHub Requirements PHP 5.5.0 or higher. Fileinfo, iconv, zip, tar and mbstring extensions are strongly recommended. 密码设置 Warning: Please set your own username and password in $auth_users before use. password is encrypted with password_hash(). to generate new password hash here
站点目录、权限设置 chown -R www-data:www-data /var/www/example.com chmod 775 /var/www/example.com chmod 664 /var/www/example.com/index.php Exclude Files &amp;amp; Folders you can specify files or directories that you&amp;rsquo;d like to exclude from the listing using configuration, in case same name file/folder in multiple place also excluded.</description>
    </item>
    <item>
      <title>Transmission的安装、配置、制作PT种子torrent做种</title>
      <link>https://567899.xyz/post/transmission/</link>
      <pubDate>Sun, 04 Jul 2021 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/transmission/</guid>
      <description>安装Transmission apt install transmission-daemon 配置Transmission 先停止Transmission
systemctl stop transmission-daemon.service 然后编辑配置文件/var/lib/transmission-daemon/info/settings.json
nano /var/lib/transmission-daemon/info/settings.json 重点需要修改的地方
&amp;#34;rpc-password&amp;#34;: &amp;#34;管理密码&amp;#34;, #web-ui的密码，可直接修改，重新运行或者reload服务的时候会自动被加密 &amp;#34;rpc-port&amp;#34;: 9091, &amp;#34;rpc-url&amp;#34;: &amp;#34;/transmission/&amp;#34;, &amp;#34;rpc-username&amp;#34;: &amp;#34;用户名&amp;#34;, #用户名 &amp;#34;rpc-whitelist&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;#34;rpc-whitelist-enabled&amp;#34;: false, #如果你要让其他网段连入，请设false 对照表
&amp;#34;alt-speed-up&amp;#34;: 500, #计划时段上传限速值 &amp;#34;alt-speed-down&amp;#34;: 500, #计划时段下载限速值 &amp;#34;alt-speed-enabled&amp;#34;: false, &amp;#34;alt-speed-time-begin&amp;#34;: 540, &amp;#34;alt-speed-time-day&amp;#34;: 127, &amp;#34;alt-speed-time-enabled&amp;#34;: true, #启用计划工作，为false时，以上计划配置则不生效 &amp;#34;alt-speed-time-end&amp;#34;: 420, #计划结束时间，为零点到开始时间的分钟数，比如7:00就是7*60=420。另外，该时间是用的GMT时间，即北京时间-8小时。比如你计划北京时间7点30分开始，这个数字应该是（7-8+24）*60+30=1410 &amp;#34;bind-address-ipv4&amp;#34;: &amp;#34;0.0.0.0&amp;#34;, &amp;#34;bind-address-ipv6&amp;#34;: &amp;#34;::&amp;#34;, &amp;#34;blocklist-enabled&amp;#34;: true, &amp;#34;blocklist-updates-enabled&amp;#34;: false, &amp;#34;blocklist-url&amp;#34;: &amp;#34;http://www.example.com/blocklist&amp;#34;, &amp;#34;cache-size-mb&amp;#34;: 4, #缓存大小，以MB为单位，建议设大一些，避免频繁读写硬盘而伤硬盘，建议设为内存大小的1/6～1/4 &amp;#34;compact-view&amp;#34;: false, &amp;#34;dht-enabled&amp;#34;: false, #关闭DHT（不通过tracker寻找节点）功能，不少PT站的要求，但BT下载设置为true会使得下载更好 &amp;#34;download-dir&amp;#34;: &amp;#34;/home/yys/Downloads&amp;#34;, #下载的内容存放的目录 &amp;#34;download-queue-enabled&amp;#34;: true, &amp;#34;download-queue-size&amp;#34;: 5, &amp;#34;encryption&amp;#34;: 1, #0=不加密，1=优先加密，2=必须加密 &amp;#34;idle-seeding-limit&amp;#34;: 30, &amp;#34;idle-seeding-limit-enabled&amp;#34;: false, &amp;#34;incomplete-dir&amp;#34;: &amp;#34;/home/yys/Downloads&amp;#34;, &amp;#34;incomplete-dir-enabled&amp;#34;: false, &amp;#34;inhibit-desktop-hibernation&amp;#34;: true, &amp;#34;lpd-enabled&amp;#34;: false, #禁用LDP（本地节点发现，用于在本地网络寻找节点）,不少PT站的要求 &amp;#34;main-window-height&amp;#34;: 500, &amp;#34;main-window-is-maximized&amp;#34;: 0, &amp;#34;main-window-width&amp;#34;: 615, &amp;#34;main-window-x&amp;#34;: 337, &amp;#34;main-window-y&amp;#34;: 211, &amp;#34;message-level&amp;#34;: 2, &amp;#34;open-dialog-dir&amp;#34;: &amp;#34;/home/yys/\u684c\u9762&amp;#34;, &amp;#34;peer-congestion-algorithm&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;peer-limit-global&amp;#34;: 240, #全局连接数 &amp;#34;peer-limit-per-torrent&amp;#34;: 60, #每个种子最多的连接数 &amp;#34;peer-port&amp;#34;: 51413, #预设的port口 &amp;#34;peer-port-random-high&amp;#34;: 65535, &amp;#34;peer-port-random-low&amp;#34;: 49152, &amp;#34;peer-port-random-on-start&amp;#34;: false, #不建议改为true &amp;#34;peer-socket-tos&amp;#34;: &amp;#34;default&amp;#34;, &amp;#34;pex-enabled&amp;#34;: false, #禁用PEX（节点交换，用于同已与您相连接的节点交换节点名单）,不少PT站的要求 &amp;#34;port-forwarding-enabled&amp;#34;: true, &amp;#34;preallocation&amp;#34;: 1, #预分配文件磁盘空间，0=关闭，1=快速，2=完全。建议取1开启该功能，防止下载大半了才发现磁盘不够。取2时，可以减少磁盘碎片，但速度较慢。 &amp;#34;prefetch-enabled&amp;#34;: 1, &amp;#34;queue-stalled-enabled&amp;#34;: true, &amp;#34;queue-stalled-minutes&amp;#34;: 30, &amp;#34;ratio-limit&amp;#34;: 2, &amp;#34;ratio-limit-enabled&amp;#34;: false, &amp;#34;rename-partial-files&amp;#34;: true, #在未完成的文件名后添加后缀.</description>
    </item>
    <item>
      <title>win10系统音量图标灰色无法调节的解决方法</title>
      <link>https://567899.xyz/post/win10-sound-not-work/</link>
      <pubDate>Wed, 02 Jun 2021 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/win10-sound-not-work/</guid>
      <description> 解决方法如下
按Win+R打开运行，输入regedit回车打开注册表编辑器; 依次展开到以下位置： 计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run 在右侧新建名为systray.exe的字符串值; 重启PC电脑. </description>
    </item>
    <item>
      <title>Oracle甲骨文OCI自动刷ARM VPS脚本</title>
      <link>https://567899.xyz/post/oracle-oci-arm-vps/</link>
      <pubDate>Sat, 29 May 2021 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/oracle-oci-arm-vps/</guid>
      <description>安装Terraform 从Terraform官网找到对应CPU架构的版本
X86_X64如下 wget https://releases.hashicorp.com/terraform/0.15.4/terraform_0.15.4_linux_amd64.zip unzip terraform_0.15.4_linux_amd64.zip mv terraform /usr/bin ARM64如下 wget https://releases.hashicorp.com/terraform/1.0.9/terraform_1.0.9_linux_arm64.zip unzip terraform_1.0.9_linux_arm64.zip mv terraform /usr/bin 查看版本
terraform version 安装oci-cli工具 安装，一路回车即可，默认安装在/root/bin目录
bash -c &amp;#34;$(curl –L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)&amp;#34; 当出现===&amp;gt; Modify profile to update your $PATH and enable shell/tab completion now? (Y/n):这个时候，是在提示你输入Y回车，会自动帮你添加环境变量。之后又是一路回车。出现如下提示表示安装成功。
===&amp;gt; Modify profile to update your $PATH and enable shell/tab completion now? (Y/n): y ===&amp;gt; Enter a path to an rc file to update (file will be created if it does not exist) (leave blank to use &amp;#39;/root/.</description>
    </item>
    <item>
      <title>Files Photo Gallery漂亮的php目录列表源码</title>
      <link>https://567899.xyz/post/files-photo-gallery-php-folders/</link>
      <pubDate>Tue, 05 Jan 2021 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/files-photo-gallery-php-folders/</guid>
      <description>Files Photo Gallery Demo
Requirements Any web server with PHP 5.5 or higher. Extensions GD and mbstring are required. Files app works in all modern browsers Chrome, Firefox, Safari, Opera and Edge, and almost all mobile devices. Files app does NOT work in Internet Explorer. Although Files app is a single file that loads files locally, it still requires an internet connection to load Javascripts loaded from CDN jsdelivr.com. Usage Examples Instantly create a gallery of all your files and folders.</description>
    </item>
    <item>
      <title>如何打开超大TXT文本文件</title>
      <link>https://567899.xyz/post/glogg-open-large-file-txt/</link>
      <pubDate>Thu, 10 Dec 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/glogg-open-large-file-txt/</guid>
      <description>前阵子拿到了某个大佬分享的裤子文件，解压后都是超大的.txt文本文件，少则几个G,大的几十个G的
尝试过用Windows自带的记事本（据说记事本最大只能打开1G的文件），PilotEdit Lite和LogViewer加载了很久还是失败了，Visual Studio Code也不行，也许是电脑配置太差吧。EmEditor也只能读取部分，附终身授权key
DMAZM-WHY52-AX222-ZQJXN-79JXH 最终搜索找到了glogg
18G的大文件(7亿行)完全加载不到1分钟左右，查找某个值也不到1分钟左右。</description>
    </item>
    <item>
      <title>V2ray安装配置Vadminss、VLESS、XTLS教程</title>
      <link>https://567899.xyz/post/v2ray/</link>
      <pubDate>Mon, 28 Sep 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/v2ray/</guid>
      <description>近期更新重点
V2Ray v4.27.0+新增支持VLESS新协议 V2Ray v4.29.0+新增支持XTLS新协议 Vadminss AEAD will be used when alterId is 0 in V2Ray v4.28.0+ 安装脚本放废弃go.sh改用install-realese.sh V2Ray v4.33.0移除了XTLS，建议使用V2Ray v4.32.1 详情参考
https://v2ray.com/ https://github.com/v2ray/v2ray-core https://toutyrater.github.io/ https://guide.v2fly.org/ https://github.com/veekxt/v2ray-template https://github.com/v2fly/v2ray-examples https://www.v2fly.org/ https://github.com/rprx/v2ray-vless https://github.com/v2fly/v2ray-core https://github.com/XTLS/Xray-core 排名不分先后顺序 致敬开发者们的无私奉献
xray https://github.com/XTLS/Xray-core
Install &amp;amp; Upgrade Xray-core and .dat files bash &amp;lt;(curl -L https://raw.githubusercontent.com/XTLS/Xray-install/main/install-release.sh) Update geoip.dat and geosite.dat only bash &amp;lt;(curl -L https://raw.githubusercontent.com/XTLS/Xray-install/main/install-dat-release.sh) Remove Xray, except json and logs bash &amp;lt;(curl -L https://raw.githubusercontent.com/XTLS/Xray-install/main/install-release.sh) --remove 成功安装后会提示如下
# /etc/systemd/system/xray.service [Unit] Description=Xray Service Documentation=https://github.</description>
    </item>
    <item>
      <title>纯净Linux系统手工配置独角数卡发卡站点环境</title>
      <link>https://567899.xyz/post/dujiaoka/</link>
      <pubDate>Tue, 22 Sep 2020 16:40:38 +0000</pubDate>
      <guid>https://567899.xyz/post/dujiaoka/</guid>
      <description>纯净系统纯手工打造独角数卡发卡站点环境，抛弃各种面板、一键网站环境。
https://github.com/assimon/dujiaoka
支付接口已集成 支付宝当面付 支付宝PC支付 支付宝手机支付 payjs微信扫码. Paysapi(支付宝/微信). 码支付(QQ/支付宝/微信) 微信企业扫码支付 Paypal支付(默认美元) 麻瓜宝数字货币支付 全网易支付支持(针对彩虹版) 基本环境要求 (PHP + PHPCLI) version &amp;gt;= 7.2 Nginx version &amp;gt;= 1.16 MYSQL version &amp;gt;= 5.6 Redis (高性能缓存服务) Supervisor (一个python编写的进程管理服务) Composer (PHP包管理器) Linux/Win (Win下未测试，建议直接Linux) 实测Supervisor不装也是可以运行的
PHP环境要求 星号(*)为必须执行的要求，其他为建议内容
*安装fileinfo扩展 *安装redis扩展 *终端需支持php-cli，测试php -v(版本必须一致) *需要开启的函数：putenv，proc_open，pcntl_signal，pcntl_alarm 安装opcache扩展 网络上各类发卡网站程序，比如ZFAKA、独角数卡环境搭建教程都是基于宝塔面板、LNMP等等环境搭建的教程。
ZFAKA可以在宝塔面板后台一键部署安装，也可以使用Docker版
为什么要手工搭建发卡网站环境
怕有后门(被害妄想症) 近期某某面板强迫用户注册才能使用 享受折腾的乐趣 测试使用环境Debian 10，其它系统可以参考修改搭建。
独角数卡发卡站环境搭建 Nginx、MYSQL的搭建具体教程请点击查看，这里重点只讲独角数卡发卡站环境搭建PHP环境的配置
PHP和一些必要组件的安装 apt -y install php-fpm php-mysql php-redis php-fileinfo php-cli php-gd redis-server php-mbstring php-bcmath php-curl php-xml php-dom 配置PHP组件 配置PHP的redis缓存组件</description>
    </item>
    <item>
      <title>Microsoft OneDrive空全局账号自建API(Rclone、OneManager-php)</title>
      <link>https://567899.xyz/post/onedrive-api/</link>
      <pubDate>Sun, 30 Aug 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/onedrive-api/</guid>
      <description>OneDrive申请空全局账号，然后登陆Azure自建API(Rclone、OneManager-php)使用，可避免使用公共API因使用频率过高导致的Rclone、网盘列目录程序OneManager-php、OneList、PyOne、Oneindex等等不稳定情况
注意： 区分国际版和中国版(由世纪互联运营)
Microsoft OneDrive网页登陆管理入口国际版、中国版(由世纪互联运营)
申请空全局账号 国际版购买注册(A1、A3、A1P、EDU、个人版)、中国版(由世纪互联运营)购买注册随便选个套餐，点立即购买，按提示注册新账号，然后进入管理把付款取消掉,到此空全局账号已经撸到手了。
登陆Azure创建API Microsoft Azure由世纪互联运营、国际版
创建方法一样的，但是要注意区分国际版和中国特供版的登陆管理入口地区。
创建Rclone的API 获取 CLIENT_ID 及 CLIENT_SECRET
Microsoft Azure由世纪互联运营、国际版登陆并按以下步骤：
左侧找到 Azure Active Directory 点击 左侧找到 应用注册 上方找到 新注册 点击 名称：Rclone 受支持的账户类型：任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户、任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户和个人 Microsoft 帐户(例如，Skype、Xbox) Web重定向 URL：http://localhost:53682 点击注册 找到 应用程序(客户端) ID 复制client_ID保存 左侧找到 证书和密码 点击 下方 客户端密码 - 新客户端密码 说明：Rclone 截止期限：默认 1年内改为从不 点击 添加，值 客户端密码 复制client_secret保存 左侧找到 API 权限 点击 添加权限 - Microsoft Graph - 委托的权限 - Files (7)全部勾选 选择应用程序权限 在下方Files里选择 Files.</description>
    </item>
    <item>
      <title>Telegram机器人Bot售卖自动发卡tg_faka_bot</title>
      <link>https://567899.xyz/post/tg_faka_bot/</link>
      <pubDate>Sun, 12 Jul 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/tg_faka_bot/</guid>
      <description>项目地址: https://github.com/GAted0/tg_faka_bot
优点:
使用sqlite3作为数据库，轻量、便于备份; 运行环境易于搭建; 不需要域名，VPS安全不会被恶意攻击. 下载与安装环境 安装python3
apt install python3-pip -y 下载tg_faka_bot并解压
git clone https://github.com/GAted0/tg_faka_bot.git PS:作者删除了部分文件，会导致不能正常使用，推荐在本站下载tg_faka_bot可正常使用。
进入文件目录
cd ~/tg_faka_bot 重命名文件
mv example.config.py config.py 安装依赖
pip3 install -r requirements.txt 编辑配置文件 登陆Telegram
@getidsbot获取自己的ID @BotFather创建bot机器人API Token 编辑文件config.py填写替换成自己的
继续配置支付接口信息 编辑配置文件 vi ~/tg_faka_bot/config.py 现在存在的支付接口：
PAYMENT_METHOD = { &amp;#39;epay&amp;#39;: &amp;#39;支付宝/微信/QQ&amp;#39;, &amp;#39;alifacepay&amp;#39;: &amp;#39;支付宝当面付&amp;#39; } 如果只需要易支付，那么可以这么配置：
PAYMENT_METHOD = { &amp;#39;epay&amp;#39;: &amp;#39;支付宝/微信/QQ&amp;#39; } 如果这时候有一个新的文件名为mugglepay.py的支付接口，那么可以这么配置：
PAYMENT_METHOD = { &amp;#39;epay&amp;#39;: &amp;#39;支付宝/微信/QQ&amp;#39;, &amp;#39;alifacepay&amp;#39;: &amp;#39;支付宝当面付&amp;#39;, &amp;#39;mugglepay&amp;#39;: &amp;#39;加密货币&amp;#39; } mugglepay.py的相对路径为getways/mugglepay/mugglepay.py
并且请确保你安装了此支付插件需要的额外依赖（如果有），pip3 install -r ~/tg_faka_bot/getways/mugglepay/mugglepay.</description>
    </item>
    <item>
      <title>甲骨文云配置IPV6及关闭防火墙放行端口</title>
      <link>https://567899.xyz/post/oracle-ipv6-iptables/</link>
      <pubDate>Fri, 28 Feb 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/oracle-ipv6-iptables/</guid>
      <description>甲骨文的系统推荐使用ubuntu
分配 IPv6
网络 - 虚拟云网络 - 虚拟云网络详细信息 中操作，最后一个步骤在实例的 VNIC 详细信息中操作：
分配CIDR 网络 - 虚拟云网络 - 虚拟云网络详细信息 - CIDR块中添加 IPv6 CIDR块 默认会分配一个 /56 大小的 IPv6 地址块
配置子网 网络 - 虚拟云网络 - 虚拟云网络详细信息- 子网 - 编辑 勾选 启用 IPv6 CIDR 块，填写 00-FF 任意一个十六进制数字，然后保存，这里就会分配一个 /64 大小的 IPv6 地址块
配置路由 网络 - 虚拟云网络 - 虚拟云网络详细信息- 路由表 点击添加路由规则
协议版本 ipv6 目标类型 internet网关 目标地CIDR块 ::/0 IPv4/IPv6 双栈要正常工作，应该要有以下两条路由(::/0、0.0.0.0/0)
配置安全规则 实例的VNIC详细信息 - 入站规则和出站规则中都加入以下规则
目的地类型(Destination Type) CIDR 目的地CIDR(Destination CIDR) ::/0 IP协议IP Protocol 所有协议All Protocols IPv4还需要在实例的VNIC详细信息 - 入站规则中加入以下规则</description>
    </item>
    <item>
      <title>在Cloudflare Workers和Github Pages部署FODI</title>
      <link>https://567899.xyz/post/fodi/</link>
      <pubDate>Fri, 07 Feb 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/fodi/</guid>
      <description>Github地址：https://github.com/vcheckzen/FODI
预览 DEMO
获取 refresh_token 国际版、个人版、家庭版 、 中国世纪互联版
点击其中的 Get a refresh_token，在打开的微软账号登录页面中，填写你的 OneDrive 账号和密码，完成登录。
登录完毕后浏览器将跳转回上面的页面，此时修改网址，从左往右找到第一个?将其删除,再找到第一个 &amp;amp;将其改为? 注意要使用英文输入法
下面是修改前后的网址对比：
#修改前 https://service-36wivxsc-1256127833.ap-hongkong.apigateway.myqcloud.com/release/scf_onedrive_filelistor/?authorization_code&amp;amp;code=... #修改后 https://service-36wivxsc-1256127833.ap-hongkong.apigateway.myqcloud.com/release/scf_onedrive_filelistor/authorization_code?code=... 修改完毕后直接回车，稍等片刻页面将返回 refresh_token，复制保存。
部署FODI后端 创建Cloudflare Workers编辑界面里面的代码替换成index.js
找到并修改const ONEDRIVE_REFRESHTOKEN = &amp;quot;xxxxxxxxxxxxxxxxx&amp;quot;
其中xxxxxxxxxxxxxxxxx为refresh_token的参数
通过Github Pages部署前端 打开index.html在SCF_GATEWAY中填上你的Cloudflare Workers地址
/** * SCF_GATEWAY：SCF 云函数网关地址 * SITE_NAME：站点名称 */ window.GLOBAL_CONFIG = { SCF_GATEWAY: &amp;#34;https://xxxx.xxx.workers.dev&amp;#34;, SITE_NAME: &amp;#34;FODI&amp;#34;, IS_CF: true }; 其它 在某个文件夹下添加.password文件加密码,README.mdMarkdown语法自述文件.注意文件必须以UTF-8无BOM格式编码且密码前后不能有空格或空行
转载自：https://logi.im/back-end/fodi-on-cloudflare.html</description>
    </item>
    <item>
      <title>OneList又一款OneDrive列目录程序,解决API抽风问题</title>
      <link>https://567899.xyz/post/onelist/</link>
      <pubDate>Thu, 06 Feb 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/onelist/</guid>
      <description>Github地址
目前OneDrive目录程序已经很多了，比如：PyOne、OneIndex和OLAINDEX。
OneList主要特色就是解决了因OneDrive API抽风导致的很多问题，稳定性和访问速度都是不错的。
更新 【2020.01.09】 修复内存占用过大。 新增支持在线视频播放的移动端自适应主题。 【2019.12.29】 新增隐藏目录或者文件。直接跳过缓存，减少API调用。 新增目录加密，支持不同目录不同账户密码。HTTP 401认证。 【2019.12.28】 新增搜索功能。 功能 支持国际版、个人免费版(家庭版)、中国版(世纪互联)。 支持同时列出多个盘的目录。(要求每个盘的SubPath唯一) 支持文件夹内超过200个项目。 支持后台自动刷新缓存。 支持路径中含有特殊字符。 数据储存在内存中，响应更加迅速。 安装 Github地址：https://github.com/MoeClub/OneList/tree/master/Rewrite
1、授权认证
点击右侧URL登录并授权，授权国际版\个人版\家庭版 、中国世纪互联版。
授权后会获取一个localhost开头打不开的链接，这里复制好整个链接地址，包括localhost。
2、安装OneList
#新建并进入OneList目录 mkdir /opt/OneList &amp;amp;&amp;amp; cd $_ #64位系统下载 wget https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/amd64/linux/OneList #32位系统下载 wget https://raw.githubusercontent.com/MoeClub/OneList//master/Rewrite/i386/linux/OneList #arm架构下载 wget https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/arm/linux/OneList #给予权限 chmod +x OneList 使用命令 Usage of OneList: -a string // 初始化配置文件,添加新配置 Setup and Init auth.json. -bind string // 绑定IP地址(公网: 0.0.0.0) Bind Address (default &amp;#34;127.0.0.1&amp;#34;) -port string // 绑定端口(HTTP:80) Port (default &amp;#34;5288&amp;#34;) -s string // 设置 SubPath 项, 需要与 -a 一起使用.</description>
    </item>
    <item>
      <title>使用Rclone挂载世纪互联OneDrive</title>
      <link>https://567899.xyz/post/rclone-onedrive-cn/</link>
      <pubDate>Sat, 01 Feb 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/rclone-onedrive-cn/</guid>
      <description>世纪互联空全局订阅获取Azure+自建独享API 适用于可以使用API,但本身子账号不能创建API的。可以撸个空全局，利用空全局账号创建API来供不能创建API的子号使用。
打开比较面向中小企业的中国版本计划和价格 随便选个套餐立即购买然后按提示注册新账号，左上角点进去,进入管理,把付款取消掉。
API权限我们需要空全局管理员点击 代表XXXX授予管理员同意
WINDOWS平台rclone获取token时需要在后面加上--onedrive-is-21vianet-version=true示范如下
rclone authorize &amp;#34;onedrive&amp;#34; &amp;#34;client_ID&amp;#34; &amp;#34;client_secret&amp;#34; --onedrive-is-21vianet-version=true 世纪互联 OneDrive 获取 CLIENT_ID 及 CLIENT_SECRET 打开 https://portal.azure.cn/ 登陆并按以下步骤：
左侧找到 Azure Active Directory 点击 左侧找到 应用注册 上方找到 新注册 点击 名称：onedrive 受支持的账户类型：	任何组织目录(任何 Azure AD 目录 - 多租户)中的帐户（第二个） 重定向 URL：http://localhost:53682 点击注册 找到 应用程序(客户端) ID 复制client_ID保存 左侧找到 证书和密码 点击 下方 客户端密码 - 新客户端密码 说明：onedrive 截止期限：默认 1年内 点击 添加，值 客户端密码 复制client_secret保存 左侧找到 API 权限 点击 添加权限 - Microsoft Graph - 委托的权限 - Files (7)全部勾选 选择应用程序权限 在下方Files里选择 Files.</description>
    </item>
    <item>
      <title>检测移动电信联通通讯运营商SIM卡分配给用户的最高速率、限速速率网速值</title>
      <link>https://567899.xyz/post/internet-sim-ambr-dl-ul-2g-3g-4g-lte/</link>
      <pubDate>Mon, 04 Nov 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/internet-sim-ambr-dl-ul-2g-3g-4g-lte/</guid>
      <description>你想知道自己的SIM卡移动数据流量网速能跑多少？是不是达标符合通信运营商承诺的网络速率？&amp;hellip; &amp;hellip;
使用条件 拥有root权限的安卓Android手机设备 CPU品牌是高通 网络信号大师 点击下载 名词解译 【网络信号大师】【LTE小区配置】里面的参数，专业术语名词相信对于通信运营商不会陌生，这里重点只涉及限速速率检测
AMBR(Aggregated Maximum Bit Rate)聚合最大比特速率，也是常说的最高速率、限速速率 DL即downlink下行速率 UL即uplink上行速率 适用范围 适用于任意套餐资费的网速速率检测。所有电信、联通、移动的2G,3G,4G(5G未测试，目前没有条件测试)的任何APN\频段\制式。CDMA、GSM、TD-SCDMA、WCDMA、LTE、HSUPA、HSDPA、FDD-LTE、TD-LTE 零流量检测网速速率 ,测试过程中可以关闭流量。比如1Mbps,3Mbps,7Mbps&amp;hellip;
温馨提示：针对24小时内，不同时段不同限速规则的，可能需要重启软件或者开关一次飞行模式才能刷新显示。
使用方法 授予安卓软件网络信号大师ROOT权限，依次打开【网络信号大师】右上角的3点【锁频段】任意切换下频段再切换回原来默认的频段，然后左右滑动到【LTE小区配置】就能在右下角方位看到AMBP DL/UL就能看到1Mbps,3Mbps,7Mbps&amp;hellip;通信运营商实行分配给用户的网速速率值了
用途 该方法检测值能作为投诉、举报到运营商、工信部的有力证据。
2020年1月1日更新：三家都将“永久套餐”全改为有到期期限了，移动2099年，电信2050年，联通2029年。所以“永久套餐”不存在的。
其它 酸酸乳免流host 混淆方式http_simple 远程端口80 APN接入点3gnet mbh.wotv.17wo.cn 沃视频 m.client.10010.com 中国联通手机营业厅 中国联通工行梦想e卡 v.icbc.com.cn m.icbc.com.cn m.mall.icbc.com.cn elife.icbc.com.cn act.icbc.com.cn hit.icbc.com.cn pv.mall.icbc.com.cn mybank.icbc.com.cn ===中国联通阿里宝卡== api.mobile.youku.com ===腾讯王卡=== qiniucdnct.inter.iqiyi.com APN:3gnet 远程端口: 80 混淆参数: szextshort.weixin.qq.com#Upgrade: mmtls\nUser-Agent: Microadminssenger Client\nAccept: */*\nConnection: close\nContent-Length: 533\nContent-Type: application/octet-stream #前面的是host \n是换行 SSR的http-simple只能伪装GET报头，不能伪装Post报头 诈骗高危地区存在局停的可能 广东省：江门，阳江，东莞，佛山，肇庆, 茂名,湛江，珠海，番禺区，潮州、惠州、河源 湖北省：孝感，黄冈，武汉，江汉(仙桃) 广西省：南宁，贵港，防城港，玉林，宾阳 湖南省：娄底，衡阳，怀化，长沙 河南省：驻马店、周口 河北省：承德、邯郸 安徽省：阜阳、安庆、蚌埠 福建省：泉州，漳州，龙岩 海南省：海口，儋州 云南省：普洱，临沧，西双版纳傣族自治州，景洪市，思茅，西双版纳，德宏 江西省：吉安，上饶 西藏、新疆 </description>
    </item>
    <item>
      <title>QQ·Linux版更新2019-10-24</title>
      <link>https://567899.xyz/post/qq-for-linux/</link>
      <pubDate>Fri, 25 Oct 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/qq-for-linux/</guid>
      <description>鹅厂Tencent QQ for Linux
从2008年7月31日开始到2019年10月24日，历时11年终于更新了
版本特性
Linux QQ 2.0.0 Beta（New）2019/10/24
Linux QQ全新回归 支持x64、ARM64、MIPS64三种架构 优化消息体验，完善消息收发能力 性能优化 QQ·Linux版 下载列表
如何安装？ 请参考你所使用的系统安装包管理器的使用说明来安装你所选择的Linux QQ安装程序，注意你需要root权限才能完成安装。在一些发行版中你可以通过双击文件管理器中的安装程序完成安装。以下是一些使用命令行来安装的例子：
sudo ./linuxqq_1.0.1-b1-100_x86_64.sh sudo rpm -ivh linuxqq_1.0.1-b1-100_mips64el.rpm sudo dpkg -i linuxqq_1.0.1-b1-100_armhf.deb sudo apt install -y /path/to/linuxqq_1.0.1-b1-100_amd64.deb sudo pacman -U linuxqq_1.0.1-ci-94_x86_64.pkg.tar.xz 如何卸载？ 请尽量使用你安装时使用的对应方式来卸载Linux QQ（参考你所使用的系统安装包管理器说明）。同样需要root权限才能完成卸载。以下是一些例子：
sudo rpm -e linuxqq sudo dpkg -r linuxqq 注意：
需要安装桌面环境 只能扫码登陆1个QQ linux VPS又多了一个功能，QQ挂机</description>
    </item>
    <item>
      <title>俄罗斯IP上P站添加规则跳过VK免登陆验证安卓Via浏览器AdBlock</title>
      <link>https://567899.xyz/post/russia-pronhub-vkontakte-adblock-via/</link>
      <pubDate>Sat, 05 Oct 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/russia-pronhub-vkontakte-adblock-via/</guid>
      <description>更新：Pornhub 已经有简体中文且网页版可以免费观看1080P高清电影了。
毛子机器上PH会弹出一个18+的提示，让登陆VK之类的毛子社交平台验证。
只需要在浏览器的去广告插件中加入两个自定义规则就可以了。不需要登陆VKontakte验证就可以玩PH。
PC端浏览器比如说chrome的扩展程序AdBlock等等 好像规则都是通用的。
cn.pornhub.com###age-verification-wrapper cn.pornhub.com###age-verification-container 安卓手机端可以用Via浏览器自带去广告功能，支持自定义规则。
依次打开via浏览器中的设置 通用 广告标记 + 添加
地址加入网址
cn.pornhub.com 标签加入规则
#age-verification-wrapper,#age-verification-container 转载自https://www.hostloc.com/thread-581829-1-1.html</description>
    </item>
    <item>
      <title>通过cookies免费看Netflix</title>
      <link>https://567899.xyz/post/free-netflix-account-cookies/</link>
      <pubDate>Sun, 01 Sep 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/free-netflix-account-cookies/</guid>
      <description>浏览器安装插件 Accounts Pool
Chrome or Firefox
Chrome浏览器下载解压后打开扩展程序【打开开发者模式】【加载已解压的扩展程序】来手动安装。 Get Cookies Free Netflix Account Cookies [30+ Updated Every Hour] - NEW METHOD
按提示进入，直到看到Cookies然后打开插件中的【Use Cookies】即可自动跳转到Netflix
应该就是已经登陆状态了 PS:
Too many people are using your account at the moment To watch Shooter,stop playing on another screen. 目前有太多人在使用您的帐户 要观看Shooter，请停止在其他屏幕上播放。</description>
    </item>
    <item>
      <title>GoogleDrive云端硬盘Microsoft_OneDrive对比下A1_E3_GD版本区别</title>
      <link>https://567899.xyz/post/microsoft-onedrive-google-drive-gsuite-e3-edu-version-difference/</link>
      <pubDate>Wed, 10 Jul 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/microsoft-onedrive-google-drive-gsuite-e3-edu-version-difference/</guid>
      <description>看到有大佬科普了教育版onedrive怎么查看数据中心，捋了好久终于是捋清楚了几个版本的差别。
刚好最近热度比较大的网盘我都有在用，干脆整理下做下对比。
可能还有什么没有考虑到，欢迎大佬指正。
几个了解到的情况 Googledrive，不管是教育账户，个人账户，团队盘。 使用的线路都没有什么大的差别，使用自家的服务器集群。 onedrive, 教育版A1，企业版E3 ，个人版都是走全球CDN, 经测试E3和A1下载地址后缀是sharepoint.com。走的cdn线路一样的。 个人版貌似线路IP不同。 onedrive世纪互联版数据中心在北京，上海，国内基本直通。 onedrive教育版,企业版,等sharepoint.com下载地址的，随着api泛滥，线路稳定性大打折扣。 谷歌盘单文件最大限制为 5T ，one盘单文件最大限制为 15G，感谢大佬补充 团队盘单文件大小受限于自己帐号网盘的大小，如果是个人版谷歌盘容量只有15g,那么添加到该账户的团队盘单文件最大也是15G Googledrive 各类型对比。 a. G Suite 价格：12刀月。 空间：标注1T 实际为无限。 隐私：保障。 国内：不可用。 国际稳定性：好。 翻车指标：准付费，无所畏惧
b. Google drive社区大学邮箱版。 价格：约20-50 隐私：无保障。 翻车指标：利用虚假身份注册的号，校方追查便会翻车。 (其余同上)
c. Google drive校友邮箱版。 价格：约100-300。 隐私：无保障。 翻车指标：利用他人信息注册的号，使用者找回便会翻车。 (其余同上)
d. Google drive团队盘版。 价格：约0-200年 隐私：无保障 翻车指标：团队盘，管理员不管管理员是否在盘内，都可随时移除成员。 (其余同上)
onedrive 各类型对比。单文件限制15G a. onedrive 个人版 价格：60-100年（拼车） 空间：1T 隐私：保障。 国内线路稳定性：好。 国内：可用。 翻车指标：准付费，无所畏惧
a. onedrive 世纪互联版 价格：最低32.00用户/月 感谢大佬补充 空间：1T及 隐私：保障。 国内线路稳定性：非常好。 国内：可用。 翻车指标：准付费，无所畏惧</description>
    </item>
    <item>
      <title>Linux VPS Debian/Ubuntu/CentOS DD系统网络安装/网络重装/纯净安装 一键脚本</title>
      <link>https://567899.xyz/post/linux-vps-dd-debian-ubuntu-centos/</link>
      <pubDate>Wed, 15 May 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/linux-vps-dd-debian-ubuntu-centos/</guid>
      <description>背景:
适用于由GRUB引导的CentOS,Ubuntu,Debian系统. 使用官方发行版去掉模板预装的软件. 同时也可以解决内核版本与软件不兼容的问题。 只要有root权限,还您一个纯净的系统。 注意:
全自动安装默认root密码:MoeClub.org 安装完成后请立即更改密码. 能够全自动重装Debian/Ubuntu/CentOS等系统. 同时提供dd安装镜像功能,例如: 全自动无救援dd安装windows系统 全自动安装CentOS时默认提供VNC功能,可使用VNC Viewer查看进度, VNC端口为1或者5901,可自行尝试连接.(成功后VNC功能会消失.) 目前CentOS系统只支持任意版本重装为 CentOS 6.x 及以下版本. 特别注意:OpenVZ构架不适用. 依赖包:
#二进制文件 Debian/Ubuntu RedHat/CentOS iconv [libc-bin] [glibc-common] xz [xz-utils] [xz] awk [gawk] [gawk] sed [sed] [sed] file [file] [file] grep [grep] [grep] openssl [openssl] [openssl] cpio [cpio] [cpio] gzip [gzip] [gzip] cat,cut.. [coreutils] [coreutils] 确保安装了所需软件:
#Debian/Ubuntu: apt-get install -y xz-utils openssl gawk file #RedHat/CentOS: yum install -y xz openssl gawk file 如果出现了错误,请运行:</description>
    </item>
    <item>
      <title>推送发布到GitHub及错误提示</title>
      <link>https://567899.xyz/post/git-push-error/</link>
      <pubDate>Fri, 29 Mar 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/git-push-error/</guid>
      <description>安装git
apt-get install git -y 进入目录后初始化
git init 排除不需要备份的文件和目录 在根目录下创建.gitignore文件，里面的文件或目录不会被上传到github. 例：
public themes dev .git .DS_Store *.bak *_bak *.old *.log 使用 SSH 密钥登录 GitHub git config --global user.name &amp;#34;username&amp;#34; git config --global user.email &amp;#34;username168@gmail.com&amp;#34; ssh-keygen -t rsa -C &amp;#39;username@gmail.com&amp;#39; 然后使用
cat /root/.ssh/id_rsa.pub 把里面的文本全部复制到 https://github.com/username/branchname/settings/keys Add deploy key
ssh -T git@github.com 测试是否连接成功
推送到github git commit -m &amp;#34;自定义描述&amp;#34; git remote add origin git@github.com:username/branchname.git git push -u origin master git push错误提示 使用git push -u origin master时弹出错误提示</description>
    </item>
    <item>
      <title>OneDrive存储空间升级到25TB的教程</title>
      <link>https://567899.xyz/post/onedrive25tb/</link>
      <pubDate>Thu, 14 Mar 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/onedrive25tb/</guid>
      <description>支持升级到OneDrive 25T的订阅如下：
Office 365 企业版 E3 Office 365 企业版 E5 OneDrive for Business 计划 2 SharePoint Online 计划 2 Office 365 企业版 E3 Office 365 企业版 E5 Office 365 A1 Office 365 A3 Office 365 A5 Office 365 美国政府版 G3 Office 365 美国政府版 G5 Office 365 非营利版 E3 Office 365 非赢利组织版 E5 Microsoft 365 企业版 E3 Microsoft 365 企业版 E5 Microsoft 365 A3 Microsoft 365 A5 Microsoft 365 美国政府版 G3 Microsoft 365 美国政府版 G5 Microsoft 365 非营利组织版 E3 Microsoft 365 非营利组织版 E5 如果用户已使用5TB存储空间的至少90%容量，Microsoft最多会将OneDrive中的默认存储空间增加到每用户25 TB（需要全局管理员工单申请并设置）。</description>
    </item>
    <item>
      <title>ubuntu-18.04设置systemctl开机启动脚本rc.local</title>
      <link>https://567899.xyz/post/ubuntu-1804-rc-local-systemctl/</link>
      <pubDate>Sat, 23 Feb 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/ubuntu-1804-rc-local-systemctl/</guid>
      <description>使用update-rc.d以及rc.local等方法就是不生效。后来在ubuntu的官方论坛ubuntu-16.10开始不再使用initd管理系统改用systemd
ubuntu-18.04 LTS版本用的是systemctl命令来替换了service和chkconfig的功能。
systemd is now used for user sessions. System sessions had already been provided by systemd in previous Ubuntu releases.
比如以前启动 mysql 服务用:
sudo service mysql start 现在用：
sudo systemctl start mysqld.service 其实这个改动到不是算大，主要是开机启动比以前复杂多了。systemd 默认读取 /etc/systemd/system 下的配置文件，该目录下的文件会链接/lib/systemd/system/下的文件。
执行 ls /lib/systemd/system 你可以看到有很多启动脚本，其中就有我们需要的 rc.local.service
打开脚本内容：
cat /lib/systemd/system/rc.local.service 可以看出/lib/systemd/system/rc.local.service的启动顺序是没有Install段
# This file is part of systemd. # # systemd is free software; you can redistribute it and/or modify it # under the terms of the GNU Lesser General Public License as published by # the Free Software Foundation; either version 2.</description>
    </item>
    <item>
      <title>手动配置安装WireGuard服务端</title>
      <link>https://567899.xyz/post/wireguard-service-install/</link>
      <pubDate>Fri, 08 Feb 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/wireguard-service-install/</guid>
      <description>&lt;h2 id=&#34;wireguard简单介绍&#34;&gt;WireGuard简单介绍&lt;/h2&gt;
&lt;p&gt;WireGuard是通过UDP协议传输数据的，这意味着它可以搭建在被墙的服务器上使用，复活被墙IP！&lt;/p&gt;
&lt;p&gt;更安全的加密&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Curve25519 目前最高水平的秘钥交换算法。&lt;/li&gt;
&lt;li&gt;ChaCha20 对称加解密算法，比 AES 更快更高效。&lt;/li&gt;
&lt;li&gt;Poly1305 是一种 MAC (adminssage Authentication Code) 标准，用于验证数据的完整性和消息的真实性。&lt;/li&gt;
&lt;li&gt;BLAKE2 一种更安全的 HASH 算法（类似的有 SHA1, SHA256, MD5）&lt;/li&gt;
&lt;li&gt;SipHash24 另一种 HASH 算法。&lt;/li&gt;
&lt;li&gt;HKDF 一种秘钥衍生算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前提要求&#34;&gt;前提要求&lt;/h2&gt;
&lt;p&gt;系统要求：Debian 8 / 9、Ubuntu 14.04 / 16.04 / 18.04 / 18.10
服务器要求：OpenVZ 虚拟化的服务器不支持安装该VPN，其他虚拟化均可。
注意：如果你用的是 Vultr、DO，且你本地没有 IPv6 地址,那就不要勾选 Enable IPv6否则可能客户端链接时可能会出错。
&lt;a href=&#34;https://www.wireguard.com/install/#red-hat-enterprise-linux-centos-module-tools&#34;&gt;CentOS7官方安装代码&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用Travis CI和Hugo將Blog自動部署到Github Pages</title>
      <link>https://567899.xyz/post/hugo-travis-ci-deploy-github-pages-automatically/</link>
      <pubDate>Sun, 20 Jan 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/hugo-travis-ci-deploy-github-pages-automatically/</guid>
      <description>個人Blog採用靜態Blog形式託管在[Github][github]上。此前使用的是[Hexo][hexo]，因其包依賴關係複雜，部署流程繁瑣，故將整個部署環境封裝到Docker鏡像中以實現快速部署，但仍較爲繁瑣。現轉用執行速度快、操作簡便的[Hugo][hugo]。本文記錄如何在GNU/Linux中通過[Travis CI][travisci]將[Hugo][hugo]生成的Blog內容自動同步到[Github][github]，實現持續集成、部署。
转载自 利用Travis CI和Hugo將Blog自動部署到Github Pages
官方文檔 本文中的相關操作皆以官方文檔爲操作依據
Github GitHub Pages Basics User, Organization, and Project Pages Creating Project Pages using the command line Configuring a publishing source for GitHub Pages Hugo Host on GitHub Travis CI [GitHub Pages Deployment][travisci-github-page] Building a Python Project Best Practices in Securing Your Data Customizing the Build GitHub Pages 限制 GitHub Pages is a static site hosting service designed to host your personal, organization, or project pages directly from a GitHub repository.</description>
    </item>
    <item>
      <title>美国SIM实体电话卡Lycamobile激活充值关闭语音信箱</title>
      <link>https://567899.xyz/post/lycamobile-activation-recharge-close-voice-mail/</link>
      <pubDate>Sun, 20 Jan 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/lycamobile-activation-recharge-close-voice-mail/</guid>
      <description>&lt;p&gt;网红款美国SIM实体电话卡Lycamobile&lt;/p&gt;
&lt;h2 id=&#34;激活sim卡获得电话号码&#34;&gt;激活SIM卡获得电话号码&lt;/h2&gt;
&lt;p&gt;去&lt;a href=&#34;https://www.lycamobile.us&#34;&gt;Lycamobile官方网站&lt;/a&gt; 的在线激活页面&lt;a href=&#34;https://www.lycamobile.us/en/activate-sim&#34;&gt;Activate SIM - Lycamobile&lt;/a&gt;完成
&lt;em&gt;激活前请不要把SIM卡插入到手机&lt;/em&gt;
ZIP code: 10065 #选择纽约州纽约曼哈顿中城10065会有机率分配到212区号
ICCID:
Email address:
PUK Code:
Select Language: English
&lt;img loading=&#34;lazy&#34; src=&#34;https://567899.xyz/images/lycamobile-SIM.png&#34; alt=&#34;&#34;  /&gt;

看到提示
&lt;strong&gt;&lt;font color=&#34;#339966&#34;&gt;12127299444 Sim Successfully Activated&lt;/font&gt;&lt;/strong&gt;
&lt;em&gt;这时可以把SIM卡插入到手机了&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu_Debian配置Apache2_PHP配置站点</title>
      <link>https://567899.xyz/post/ubuntu-debian-apache2-php-vhost-sites/</link>
      <pubDate>Fri, 11 Jan 2019 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/ubuntu-debian-apache2-php-vhost-sites/</guid>
      <description>日常更新
apt-get update -y apt-get upgrade -y 查找程序名
sudo apt-cache search apache | grep &amp;#39;apache2&amp;#39; 安装Apache2 apt-get install apache2 安装好后开服务
service apache2 start systemctl enable apache2 检查Apache2运行状态
systemctl status apache2 安装Apache的php支持模块
sudo apt-get install libapache2-mod-php 重启Apache2
/etc/init.d/apache2 restart 停止
/etc/init.d/apache2 stop 状态查询
/etc/init.d/apache2 status 在浏览器中输入IP地址，看到以下页面说明apache成功安装
Debian系统上Apache2 Web服务器安装的配置布局如下：
/etc/apache2/ |-- apache2.conf | `-- ports.conf |-- mods-enabled | |-- *.load | `-- *.conf |-- conf-enabled | `-- *.conf |-- sites-enabled | `-- *.</description>
    </item>
    <item>
      <title>Nginx使用官方工具Certbot配置申请Let’s Encrypt安全SSL证书详细教程</title>
      <link>https://567899.xyz/post/debian-ubuntu-nginx-certbot-lets-encrypt-ssl/</link>
      <pubDate>Wed, 21 Nov 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/debian-ubuntu-nginx-certbot-lets-encrypt-ssl/</guid>
      <description>获取Certbot客户端 apt update apt install openssl nginx certbot -y systemctl enable nginx systemctl start nginx 获取SSL证书 certbot certonly --webroot -w /var/www/example -d example.com -d www.example.com 这个命令会为example.com和www.example.com这两个域名生成一个证书，使用--webroot模式会在/var/www/example站点根目录中创建.well-known文件夹，这个文件夹里面包含了一些验证文件，certbot会通过访问example.com/.well-known/acme-challenge来验证你的域名是否绑定的这个服务器。
SSL证书保存路径
/etc/letsencrypt/live/example.com/fullchain.pem /etc/letsencrypt/live/example.com/privkey.pem 自动更新SSL证书 Let’s Encrypt提供的证书只有90天的有效期，certbot运行
certbot renew 自动检查系统内的证书，并且自动更新这些证书。 我们也可以运行certbot renew --dry-run测试一下
或添加一个cron计划19 4 * * 3 root certbot renew意为每周三的00:19执行定时更新SSL证书计划
获取 Certbot 客户端 wget https://dl.eff.org/certbot-auto chmod a+x ./certbot-auto ./certbot-auto --help 配置 nginx 、验证域名所有权 在虚拟主机配置文件（ /etc/nginx/conf.d/xxx.com.conf ）中添加如下内容，这一步是为了通过 Let’s Encrypt 的验证，验证 linuxstory.org 这个域名是属于我的管理之下。（具体解释可见下一章“一些补充说明”的“ certbot 的两种工作方式”）
location ^~ /.</description>
    </item>
    <item>
      <title>VMware Workstation单臂路由配置安装openwrt(LEDE)单网卡国际互联网</title>
      <link>https://567899.xyz/post/router-on-a-stick-vmwareworkstation-openwrt-lede/</link>
      <pubDate>Sun, 28 Oct 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/router-on-a-stick-vmwareworkstation-openwrt-lede/</guid>
      <description>为什么要配置虚拟机环境 出差时，比如udp2raw等个别软件只能在LINUX环境才能使用，而在WIN环境下就没法例用它。
所需要的软件 VMware Workstation 15 Pro 注册码SN:ZY1MK-4UD80-M81VY-RZYNX-Z22X2 StarWind V2V Converter KoolShare 固件 选择普通的就行，不一定非要虚拟机转盘或PE下写盘专用 使用StarWind V2V-Image Converter转换格式 Image format选择Vmware growable image
![](/images/StarWind V2V-Image Converter-1.png)
![](/images/StarWind V2V-Image Converter-2.png)
配置VMware Workstation 开始新建虚拟机，选择稍后安装操作系统
客户机操作系统选择Linx版本其它Linx 4.X或更高版本内核64位
一路默认完成创建,编辑虚拟机设置 删除打印机(可选)，删除原有的硬盘，然后添加硬盘使用现有虚拟磁盘 找到刚才转换好的后缀为.vmdk格式的并使用它。
网络适配器中的网络连接选择桥接模式(B):直接连接物理网络
配置LEDE软路由 配置网络
vi /etc/config/network 这里有2种联网方式
通过上级路由器拨号上网 上级路由器已经设置好了拨号上网。 假设宿主机路由器的网关为10.10.10.1 此时可以删除WAN口(可选)，也可以保留。 上图中上级拨号路由器的IP地址为10.10.10.1虚拟机软路由器的IP地址为10.10.10.11 按实际IP修改
IPV4 网关务必一定要设置成上级路由器的IP地址 IPV4 地址必须要跟上级路由器在同一个网段内 DNS可以设置成公共DNS，也可以使用运营商的。 联网后去酪软中心安装科学上网插件并配置好以后 其它设置，包括本机电脑的只要网关设置成10.10.10.11就能享受国际互联网了。
在虚拟机路由器里拨号上网 待完善中&amp;hellip; &amp;hellip;</description>
    </item>
    <item>
      <title>从零开始编译OpenWRT lean软路由固件教程</title>
      <link>https://567899.xyz/post/openwrt/</link>
      <pubDate>Sun, 26 Aug 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/openwrt/</guid>
      <description>测试系统：ubuntu18.04 lts x64
如何编译自己需要的OpenWrt固件 Lean大雕的地址： https://github.com/coolsnowwolf/lede
注意：
不要用 root 用户 git 和编译！！！ 国内用户编译前最好准备好梯子 默认登陆IP 192.168.1.1, 密码 password 编译命令如下:
首先装好 Ubuntu 64bit，推荐 Ubuntu 14 LTS x64
桌面版本的按CTRL+ALT+T进入终端，更新软件列表，下载安装更新。命令行输入
sudo apt-get update 安装基础环境(占用2GB左右的磁盘)
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint 下载源代码，建立工作目录，进入工作目录
git clone https://github.</description>
    </item>
    <item>
      <title>docker创建删除使用容器或镜像</title>
      <link>https://567899.xyz/post/docker/</link>
      <pubDate>Wed, 25 Jul 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/docker/</guid>
      <description>&lt;p&gt;&lt;em&gt;更多容器可以访问&lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt;的&lt;a href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;操作系统内核大于等于 3.10 的都可以安装最新版 Docker 查看内核版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uname -r
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装docker&#34;&gt;安装docker&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -qO- get.docker.com &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; bash 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后，运行下面的命令，验证是否安装成功。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker version 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>静态网站生成器hugo安装配置主题</title>
      <link>https://567899.xyz/post/hugo-install-themes/</link>
      <pubDate>Thu, 19 Jul 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/hugo-install-themes/</guid>
      <description>install-hugo 下载Hugo 对应平台解压得到二进制文件
Linux安装hugo 以64bit为例，此安装方法适用于debian ubuntu centos openwrt等X64位的系统
wget https://github.com/gohugoio/hugo/releases/download/v0.54.0/hugo_0.54.0_Linux-64bit.tar.gz tar zxvf hugo_0.54.0_Linux-64bit.tar.gz mv hugo /usr/bin/hugo Windows安装hugo 下载hugo_extended_0.54.0_Windows-64bit.zip 并解压缩
C:\Hugo\bin - hugo.exe - LICENSE - README.md 添加到PATH
set PATH=%PATH%;C:\Hugo\bin 验证是否安装成功 hugo version 能看到Hugo版本号说明已经成功安装好了hugo
C:\Hugo&amp;gt;set PATH=%PATH%;C:\Hugo\bin C:\Hugo&amp;gt;hugo version Hugo Static Site Generator v0.54.0/extended windows/amd64 BuildDate: unknown C:\Hugo&amp;gt; Hugo新建网站 使用以下命令新建站点
hugo new site blog Hugo会自动新建名为blog的文件夹
C:\HUGO\BLOG ├─archetypes ├─content ├─data ├─layouts ├─static └─themes 文件夹描述相关
archetypes使用hugu new post生成新文章的模板，可以自定义里面的值 content 存放网站内容 data 存储Hugo在生成您的网站时可以使用的配置文件 layouts 以.html文件的形式存储模板，指定如何将内容的视图呈现到静态网站中 static 存储所有静态内容：图像，CSS，JavaScript等，当Hugo构建您的站点时，静态目录中的所有资产都将按原样复制 themes 存放主题 config.</description>
    </item>
    <item>
      <title>在Linux_VPS上使用rclone挂载GoogleDrive云端硬盘和MicrosoftOneDrive</title>
      <link>https://567899.xyz/post/linux-vps-rclone-googledrive-microsoftonedrive/</link>
      <pubDate>Wed, 13 Jun 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/linux-vps-rclone-googledrive-microsoftonedrive/</guid>
      <description>rclone可以在Linux上挂载包括
Rclone is a command line program to sync files and directories to and from: Alibaba Cloud (Aliyun) Object Storage System (OSS) Amazon Drive (See note) Amazon S3 Backblaze B2 Box Ceph DigitalOcean Spaces Dreamhost Dropbox FTP Google Cloud Storage Google Drive HTTP Hubic Jottacloud IBM COS S3 Koofr adminmset Memstore adminga Microsoft Azure Blob Storage Microsoft OneDrive Minio Nextcloud OVH OpenDrive Openstack Swift Oracle Cloud Storage ownCloud pCloud put.io QingStor Rackspace Cloud Files Scaleway SFTP Wasabi WebDAV Yandex Disk The local filesystem 且不会占用本地硬盘空间</description>
    </item>
    <item>
      <title>利用Caddy,Nginx反向代理谷歌YouTube等网站</title>
      <link>https://567899.xyz/post/nginx-caddy-proxy-google-youtube-wikipedia/</link>
      <pubDate>Mon, 21 May 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/nginx-caddy-proxy-google-youtube-wikipedia/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://caddyserver.com&#34;&gt;Caddy&lt;/a&gt; - The HTTP/2 Web Server with Automatic HTTPS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go语言一个二进制单文件就是服务端&lt;/li&gt;
&lt;li&gt;自动申请&lt;a href=&#34;https://letsencrypt.org&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;免费的SSL/TLS证书,自动续期。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;caddy一键安装脚本&#34;&gt;Caddy一键安装脚本&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -N --no-check-certificate https://raw.githubusercontent.com/ojbk8/ToyoDAdoubiBackup/master/caddy_install.sh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod +x caddy_install.sh &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash caddy_install.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;caddy_conf_file=&amp;quot;/usr/local/caddy/Caddyfile&amp;quot;&lt;/li&gt;
&lt;li&gt;日志文件：cat /tmp/caddy.log&lt;/li&gt;
&lt;li&gt;使用说明：service caddy start | stop | restart | status&lt;/li&gt;
&lt;li&gt;或者使用：/etc/init.d/caddy start | stop | restart | status&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>gitbook安装和插件的使用</title>
      <link>https://567899.xyz/post/gitbook-install-plugin/</link>
      <pubDate>Thu, 17 May 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/gitbook-install-plugin/</guid>
      <description>gitbook安装使用插件教程
安装gitbook 先下载安装Node.js,然后
npm install -g gitbook-cli gitbook init gitbook install ./ gitbook build gitbook serve 提示如下
D:\gitbook&amp;gt;gitbook serve Live reload server started on port: 35729 Press CTRL+C to quit ... info: 7 plugins are installed info: loading plugin &amp;#34;livereload&amp;#34;... OK info: loading plugin &amp;#34;highlight&amp;#34;... OK info: loading plugin &amp;#34;search&amp;#34;... OK info: loading plugin &amp;#34;lunr&amp;#34;... OK info: loading plugin &amp;#34;sharing&amp;#34;... OK info: loading plugin &amp;#34;fontsettings&amp;#34;... OK info: loading plugin &amp;#34;theme-default&amp;#34;.</description>
    </item>
    <item>
      <title>hexo备份更换设备后同步编辑</title>
      <link>https://567899.xyz/post/hexo-backup-synchronize-edit/</link>
      <pubDate>Wed, 11 Apr 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/hexo-backup-synchronize-edit/</guid>
      <description>备份hexo原始配置文件 压缩打包备份原始的hexo配置文件scaffolds, source, themes 和 _config.yml
在新电脑上重新布署安装一次hexo cd /d npm install hexo-cli -g hexo init blog cd blog npm install npm install hexo-deployer-git --save git init npm install hexo-generator-feed --save npm install hexo-generator-sitemap --save npm install hexo-generator-baidu-sitemap --save npm install hexo-generator-searchdb --save git clone https://github.com/iissnan/hexo-theme-next themes/next 然后覆盖替换掉原有的文件scaffolds, source, themes 和 _config.yml
hexo远程同步到github 登陆GitHub并创建分支为username.github.io 可以点击Join GitHub注册账号
git config --global user.name &amp;#34;username&amp;#34; git config --global user.email &amp;#34;youremail@gmail.com&amp;#34; ssh-keygen -t rsa -C &amp;#39;youremail@gmail.com&amp;#39; Your public key has been saved in /c/Users/admin/.</description>
    </item>
    <item>
      <title>Linux下scp使用RSA秘钥传输数据Scp命令免密码远程下载上传</title>
      <link>https://567899.xyz/post/linux_ssh_scp_id_rsa/</link>
      <pubDate>Wed, 11 Apr 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/linux_ssh_scp_id_rsa/</guid>
      <description>生成密钥对 ssh-keygen id_rsa为私钥文件(保存在client) id_rsa.pub为公钥(用于追加到server的用户目录/.ssh/authorized_keys文件中) 下载数据 scp -i ~/.ssh/id_rsa -r root@server_ip:/var/www/ /var/www/ 上传数据 scp -i ~/.ssh/id_rsa -r /var/www/ root@server_ip:/var/www/ ssh登录 ssh user@host 其它 ssh使用RSA密钥对登录也是同理，service名称为sshd,配置文件为/etc/ssh/sshd_config
chmod -R 700 ~/.ssh/ chmod 600 ~/.ssh/authorized_keys 指定端口 -P: 大写的P, 指定端口号
scp -P 788 -i ~/.ssh/id_rsa -r /var/www/ root@server_ip:/var/www/ </description>
    </item>
    <item>
      <title>Ubuntu18.04关闭iptables防火墙开放所有端口</title>
      <link>https://567899.xyz/post/ubuntu-iptables/</link>
      <pubDate>Wed, 11 Apr 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/ubuntu-iptables/</guid>
      <description>sudo iptables -P INPUT ACCEPT sudo iptables -P FORWARD ACCEPT sudo iptables -P OUTPUT ACCEPT sudo iptables -F iptables-save &amp;gt; /etc/iptables/rules.v4 </description>
    </item>
    <item>
      <title>hexo同步布署在github-coding并实现国内外自动分流</title>
      <link>https://567899.xyz/post/hexo-github-coding-sync-diversion/</link>
      <pubDate>Thu, 29 Mar 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/hexo-github-coding-sync-diversion/</guid>
      <description>&lt;p&gt;建议单独托管在github上，因为国内大环境背景下，你懂的啦！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://567899.xyz/images/coding-domain-Filing.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;域名解析&#34;&gt;域名解析&lt;/h2&gt;
&lt;p&gt;登陆&lt;a href=&#34;https://www.dnspod.cn&#34;&gt;DNSPOD控制台&lt;/a&gt;  在域名添加2条记录值&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;记录类型&lt;/th&gt;
&lt;th&gt;线路类型&lt;/th&gt;
&lt;th&gt;记录值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CNAME&lt;/td&gt;
&lt;td&gt;国外&lt;/td&gt;
&lt;td&gt;username.github.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CNAME&lt;/td&gt;
&lt;td&gt;国内&lt;/td&gt;
&lt;td&gt;username.coding.me&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>Debian/Ubuntu系统手动更新内核并启用TCP BBR拥塞控制算法</title>
      <link>https://567899.xyz/post/debian-ubuntu-kernel-update-bbr/</link>
      <pubDate>Thu, 21 Dec 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/debian-ubuntu-kernel-update-bbr/</guid>
      <description>查看内核版本
uname -r BBR要求内核为kernel4.9以上版本。
如果大于或等于4.9的可以直接开启BBR,开启步骤如下
配置文件
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf 加载配置到内核参数中
sysctl -p sysctl net.ipv4.tcp_available_congestion_control 顺利的话下面的命令就能看到bbr模块了
lsmod | grep bbr sysctl net.ipv4.tcp_available_congestion_control 返回值一般为：
net.ipv4.tcp_available_congestion_control = bbr cubic reno sysctl net.ipv4.tcp_congestion_control 返回值一般为：
net.ipv4.tcp_congestion_control = bbr sysctl net.core.default_qdisc 返回值一般为：
net.core.default_qdisc = fq 如果内核版本低于4.9的需要手动升级到4.9或以上才能开启
去这里下载最新版的内核 deb 安装包
如果系统是 64 位，则下载 amd64 的 linux-image 中含有 generic 这个 deb 包； 如果系统是 32 位，则下载 i386 的 linux-image 中含有 generic 这个 deb 包； 安装的命令如下（以最新版的 64 位 4.</description>
    </item>
    <item>
      <title>IPv6的VPS连接IPv4和IPv4的VPS免费获取IPv6</title>
      <link>https://567899.xyz/post/ipv4-ipv6-connect-access/</link>
      <pubDate>Thu, 09 Nov 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/ipv4-ipv6-connect-access/</guid>
      <description>只有IPv6的VPS连通IPV4 无ipv4纯ipv6先编辑/etc/resolv.conf改成DNS64地址
nameserver 2001:67c:2b0::4 nameserver 2001:67c:27e4::64 然后执行
chattr +i /etc/resolv.conf service systemd-resolved restart IPV4免费获得IPV6 只有IPV4的VPS通过Hurricane Electric Internet Services免费获得IPV6。
Hurricane Electric Free IPv6 Tunnel Broker
注册 登陆 按提示输入公网IPV4,选择地区区域，获得IPV6。
选择自己VPS的系统对应版本按提示附加上去 enjoy
Cloudflare WARP 一键安装脚本 转载自项目地址、Cloudflare WARP 一键安装脚本 使用教程
无论 VPS 是 IPv4 还是 IPv6 又或都有，添加 WARP Wire­Guard 双栈全局网络，直接使用以下 WARP 脚本命令一把梭： # 自动配置 WARP WireGuard 双栈全局网络 bash &amp;lt;(curl -fsSL git.io/warp.sh) d 添加或更改 IPv4/​IPv6 网络中的一个出口走 WARP Wire­Guard 网络，使用以下 WARP 脚本命令一把梭： # 自动配置 WARP WireGuard IPv4 网络 bash &amp;lt;(curl -fsSL git.</description>
    </item>
    <item>
      <title>Oneindex程序安装失败解决办法</title>
      <link>https://567899.xyz/post/oneindex-installation-failed/</link>
      <pubDate>Wed, 04 Oct 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/oneindex-installation-failed/</guid>
      <description>项目地址： https://github.com/donwa/oneindex
功能：
不占用服务器空间，不走服务器流量； 直接列出 OneDrive 目录，文件直链下载。 源码安装运行需求：
PHP空间，PHP 5.6+ 需打开curl支持 OneDrive 账号 (个人、企业版或教育版/工作或学校帐户) OneIndex 程序 Oneindex程序安装失败解决办法 打开这个网址https://apps.dev.microsoft.com/#/appList
里面会列出oneindex的应用，点击进去后，会看到你的应用ID（client_ID）。
找到【应用程序机密】，点击【生成新密码】，就会生成一个新的client_secret，然后重新安装时候填这个新的client_secret就可以了</description>
    </item>
    <item>
      <title>Linux下tar,unzip,7z,rar压缩带密码解压文件文件夹的使用</title>
      <link>https://567899.xyz/post/linux-tar-unzip-p7zip-unrar-password/</link>
      <pubDate>Sun, 01 Oct 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/linux-tar-unzip-p7zip-unrar-password/</guid>
      <description>tar压缩 压缩多个文件或者文件夹的命令
tar -czvf a.tar.gz(想压缩文件名) 源文件名1 源文件名2 源文件夹1 源文件夹2 参数：
c创建一个压缩文件，如果只使用这个参数，不使用 z 参数，那么只会打包，不会压缩 x解开一个压缩文件 z是否使用 gzip 压缩或解压 j是否使用 bzip2 压缩或解压 v显示详细信息 f指定压缩后的文件名，后面要直接跟文件名，所以将 f 参数放到最后 举几个例子：
将a文件夹打包成a.tar但是不压缩
tar cvf a.tar arg 将a文件夹打包成a.tar.gz并使用 gzip 压缩
tar czvf a.tar.gz arg 将a文件夹打包成a.tar.gz并使用bzip2压缩
tar cjvf a.tar.bz2 arg tar解压 Linux下常见的压缩包格式有5种:zip tar.gz tar.bz2 tar.xz tar.Z
其中tar是种打包格式,gz和bz2等后缀才是指代压缩方式:gzip和bzip2
filename.zip的解压:
unzip filename.zip filename.tar.gz的解压:
tar -zxvf filename.tar.gz 其中zxvf含义分别如下
zgzip压缩格式 xextract解压 vverbose详细信息 ffile(file=archieve)文件 filename.tar.bz2的解压:
tar -jxvf filename.tar.bz2 j指bzip2压缩格式
其它选项和tar.gz解压含义相同
filename.tar.xz的解压:
tar -Jxvf filename.</description>
    </item>
    <item>
      <title>Linux安装、使用qBittorrent</title>
      <link>https://567899.xyz/post/qbittorrent/</link>
      <pubDate>Fri, 22 Sep 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/qbittorrent/</guid>
      <description>qBittorrent是一款常见的BT,PT下载工具，
PT下载工具对比
qBittorrent在PT中抢上传有优势 Transmission适合在PT保种，系统资源占用少点 安装qBittorrent 添加软件源 add-apt-repository ppa:qbittorrent-team/qbittorrent-stable 按ENTER回车键添加软件源
【可选】如出现add-apt-repository command not found的解决方法
apt-get install software-properties-common 安装qBittorrent Webui apt-get update apt-get install qbittorrent qbittorrent-nox -y 启动软件 qbittorrent-nox &amp;amp; 访问 http://localhost:8080 来控制qBittorrent The Web UI administrator user name is: admin Web 用户界面管理员密码设置为默认密码：adminadmin 存在安全风险！请考虑在设置更改密码！ 指定端口：
qbittorrent-nox --webui-port=XXXX 命令是在当前窗口下启动的，如果窗口关闭也就跟着一同关闭了，所有需要后台运行，完整命令如下：
qbittorrent-nox --webui-port=8899 &amp;amp; 添加qbittorrent-nox开机自动启动 创建qbittorrent-nox启动服务
echo &amp;#34;[Unit] Description=qbittorrent-nox After=network.service [Service] Type=simple User=root Group=root ExecStart=/usr/bin/qbittorrent-nox PrivateTmp=true Restart=on-failure [Install] WantedBy=multi-user.target&amp;#34; &amp;gt; /etc/systemd/system/qbittorrent-nox.service 启动qbittorrent-nox
systemctl daemon-reload systemctl enable qbittorrent-nox.</description>
    </item>
    <item>
      <title>TCP加速bbr魔改plus锐速lotserver一键安装包</title>
      <link>https://567899.xyz/post/linux-tcp-bbr-lotserver/</link>
      <pubDate>Wed, 23 Aug 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/linux-tcp-bbr-lotserver/</guid>
      <description>整出了一个集合BBR、BBR魔改、BBR plus、锐速四合一的脚本 本脚本支持KVM架构的VPS，不支持OpenVZ。
项目地址：(https://github.com/cx9208/Linux-NetSpeed)
安装 wget https://github.com/ojbk8/Linux-NetSpeed/raw/master/tcp.sh chmod +x tcp.sh ./tcp.sh 先换成对应加速 出现弹窗按TAB键切换选择No回车删除原内核
重启后
./tcp.sh 开启加速</description>
    </item>
    <item>
      <title>SSH使用SSH-KEY登录并禁用密码登录</title>
      <link>https://567899.xyz/post/ssh-xshell-password-keys/</link>
      <pubDate>Wed, 12 Jul 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/ssh-xshell-password-keys/</guid>
      <description>SSH安全登陆三步曲
修改默认端口22为其它 改用SSH-keys登陆 禁止密码登陆 Linux生成密钥对
ssh-keygen 文件 类型 路径 id_rsa 私钥 ~/.ssh/id_rsa id_rsa.pub 公钥 ~/.ssh/id_rsa.pub 使用Xshell生成密钥公钥 点击下载Xshell5依次点击菜单栏中的【工具】【新建用户密钥生成向导】
【密钥类型】选择RSA【长度】2048可以自定义
然后一路【下一步】【保存为文件】
生成私钥 工具 -&amp;gt; 用户秘钥管理者 选中秘钥类型 -&amp;gt; 导出
至此，生成了一对 公钥-私钥 对。 id_rsa_2048.pub #公钥 id_rsa_2048 #私钥
使用puttygen把密钥id_rsa_2048转换成xxx.ppk后缀的文件
如果您实在不会或者不想动手的话，可以用现成的。下载已经生成的 id_rsa_2048密钥对 里面包括了公钥 私钥及转换好了的PPK格式后缀
配置Xshell使用密钥登陆 创建目录
mkdir .ssh chmod 700 .ssh 创建文件
cd .ssh touch authorized_keys chmod 600 authorized_keys 写入公钥内容
nano /.ssh/authorized_keys 把id_rsa_2048.pub中的文本内容全部复制到/.ssh/authorized_keys
修改SSH配置文件
nano /etc/ssh/sshd_config 启用密钥验证
RSAAuthentication yes PubkeyAuthentication yes AuthorsizedKeysFile .ssh/authorized_keys AuthorsizedKeysFile .ssh/authorized_keys是指定公钥数据库文件
重启SSH服务生效</description>
    </item>
    <item>
      <title>搭建配置frps内网穿透服务端开机自启</title>
      <link>https://567899.xyz/post/frps-service-install/</link>
      <pubDate>Mon, 15 May 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/frps-service-install/</guid>
      <description>&lt;p&gt;在debian ubuntu x64上测试通过 &lt;a href=&#34;https://github.com/fatedier/frp/releases&#34;&gt;其它系统frp下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;假设你的IPV4地址为11.22.33.44 假设是以ROOT用户登陆并在root用户默认目录下&lt;/p&gt;
&lt;h2 id=&#34;下载安装frp&#34;&gt;下载安装frp&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -N -O frp.tar.gz https://github.com/fatedier/frp/releases/download/v0.23.1/frp_0.23.1_linux_amd64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar -zxvf frp.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv frp_0.23.1_linux_amd64 frp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置frps服务端&#34;&gt;配置frps服务端&lt;/h2&gt;
&lt;p&gt;修改文件frp/frps.ini服务端配置文件,按需要添加删减,示范如下&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows中将OneDrive映射为本地磁盘</title>
      <link>https://567899.xyz/post/windows-map-a-network-drive/</link>
      <pubDate>Thu, 20 Apr 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/windows-map-a-network-drive/</guid>
      <description>将 OneDrive 映射为本地网络驱动器 登录到 OneDrive 在浏览器地址栏即可获取账户 ID。类似：
https://onedrive.live.com/?id=root&amp;amp;cid=xxxxxxxxxxx 其中xxxxxxxxxxx为Onedrive账户ID
打开此电脑 计算机 映射网络驱动器
映射网络驱动器在文件夹输入
https://d.docs.live.net/xxxxxxxxxxx 按提示输入账号密码即能完成映射网络驱动器</description>
    </item>
    <item>
      <title>简要安装hexo和next主题</title>
      <link>https://567899.xyz/post/hexo-next-install/</link>
      <pubDate>Sat, 18 Feb 2017 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/hexo-next-install/</guid>
      <description>&lt;p&gt;以下以Windows平台为例&lt;/p&gt;
&lt;h2 id=&#34;下载安装node和git&#34;&gt;下载安装Node和git&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git - Downloads&lt;/a&gt; 和 &lt;a href=&#34;https://nodejs.org/zh-cn/download/&#34;&gt;下载 | Node.js&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装hexo&#34;&gt;安装hexo&lt;/h2&gt;
&lt;p&gt;打开Git Bash依次执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install hexo-cli -g
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /d  &lt;span class=&#34;c1&#34;&gt;#这里以D盘为例&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hexo init blog
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; blog &lt;span class=&#34;c1&#34;&gt;#/d/blog为hexo的根目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hexo server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应该就能在浏览器中打开(http://localhost:4000) 看到效果了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Debian、Ubuntu系统上为Python 2/3安装和使用Pip的方法</title>
      <link>https://567899.xyz/post/ubuntu-debian-install-python3-pin3-pip/</link>
      <pubDate>Mon, 19 Sep 2016 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/ubuntu-debian-install-python3-pin3-pip/</guid>
      <description>为Python 3安装pip3 以具有sudo权限的非root用户身份执行以下步骤
首先更新包列表：
sudo apt update 使用以下命令为Python 3及其所有依赖项安装pip：
sudo apt install python3-pip 查看pip3、Python版本以验证安装：
pip3 --version python3 -V 版本号可能不同，但它看起来如下所示：
pip 18.1 from /usr/lib/python3/dist-packages/pip (python 3.7) 为Python 2安装pip 以具有sudo权限的非root用户身份执行以下步骤
首先更新包索引：
sudo apt update 为Python 2及其所有依赖项安装pip：
sudo apt install python-pip 通过输入以下命令来验证安装，该命令将打印pip版本：
pip --version 版本号可能会有所不同，但它看起来像这样：
pip 18.1 from /usr/lib/python2.7/dist-packages/pip (python 2.7) 安装软件
pip install 软件包名 卸载包：
pip uninstall package_name 从PyPI搜索包：
pip search &amp;#34;search_query&amp;#34; 列出已安装的包：
pip list 列出过时的包：
pip list --outdated </description>
    </item>
    <item>
      <title>Linux下如何管理多个ssh密钥对github公钥私钥</title>
      <link>https://567899.xyz/post/linux-github-id_rsa-pub/</link>
      <pubDate>Fri, 29 Jul 2016 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/linux-github-id_rsa-pub/</guid>
      <description>列出已存在相应的ssh key密钥对 ls -al ~/.ssh 如果你已经有了一套名为id_rsa的公秘钥，将要生成另外一个公钥，比如new_id_rsa你也可以使用任何你喜欢的名字。
步骤如下：
生成一个新的自定义名称的公钥 git config --global user.name &amp;#34;username&amp;#34; git config --global user.email &amp;#34;youremail@gmail.com&amp;#34; ssh-keygen -t rsa -C &amp;#34;youremail@gmail.com&amp;#34; 修改文件名或路径
Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /root/.ssh/new_id_rsa #这里替换成新的路径、文件名 或者直接使用以下命令生成
ssh-keygen -t rsa -b 4096 -C &amp;#34;your_email@example.com&amp;#34; -f ~/.ssh/new_id_rsa your_email@example.com替换成你注册github所用的邮箱，执行命令后，执行完成后，会在~/.ssh/目录下生成一个new_id_rsa私钥和new_id_rsa.pub公钥文件。
为ssh key 添加代理 ssh-add ~/.ssh/new_id_rsa 注意：如果执行ssh-add时显示错误Could not open a connection to your authentication agent.那么执行
eval `ssh-agent -s` 后重新执行ssh-add那条命令即可。
连接到github 查看~/.</description>
    </item>
    <item>
      <title>Github同步更新Fork的项目</title>
      <link>https://567899.xyz/post/github-fork-pull-request-update/</link>
      <pubDate>Thu, 21 Jul 2016 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/github-fork-pull-request-update/</guid>
      <description>github上fork了别人的项目后，再同步更新别人的提交，github分支网站上操作，同步你的Fork 仓库
Github网页同步更新Fork的项目，操作方便。不用命令行
登陆进入自己已经fork的仓库名，切换到Code 按照截图操作即可。
点击New pull request
base repository选择自己的仓库分支 compare across forks head repository选择fork源头项目的仓库分支 Caeate pull request titel自定义 然后点击Create pull request
adminrge pull request
Confirm merge 到此完全了Github同步更新Fork的项目
xxxx adminrge pull request #xxxx from xxxx/master
刷新自己的github仓库，可以看到代码更新时间，已经同步成功，跟源项目仓库保持一样了</description>
    </item>
    <item>
      <title>Git push/pull提交记住保存用户名和密码</title>
      <link>https://567899.xyz/post/git-push-pull-password/</link>
      <pubDate>Fri, 24 Jun 2016 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/git-push-pull-password/</guid>
      <description>Git可以将用户名，密码和仓库链接保存在硬盘中，而不用在每次push的时候都输入密码。保存密码到硬盘一条命令就可以
git config credential.helper store 当git push的时候输入一次用户名和密码就会被记录,以后git pull/push就不再需要填写用户名密码了
这样保存的密码是明文的，保存在用户目录~的.git-credentials文件中
cat ~/.git-credentials </description>
    </item>
    <item>
      <title>SSH远程会话管理工具screen使用教程</title>
      <link>https://567899.xyz/post/screen/</link>
      <pubDate>Wed, 22 Jun 2016 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/screen/</guid>
      <description>在刚接触Linux时最怕的就是SSH远程登录Linux VPS编译安装程序时（比如安装lnmp）网络突然断开，或者其他情况导致不得不与远程SSH服务器链接断开，远程执行的命令也被迫停止，只能重新连接，重新运行。
一、screen命令是什么？
Screen是一个可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。Screen中有会话的概念，用户可以在一个screen会话中创建多个screen窗口，在每一个screen窗口中就像操作一个真实的telnet/SSH连接窗口那样。
二、如何安装screen命令？
除部分精简的系统或者定制的系统大部分都安装了screen命令，如果没有安装， CentOS系统可以执行：
yum install screen Debian/Ubuntu系统执行：
apt-get install screen 三、screen命令使用方法？
1、常用的使用方法
用来解决文章开始我们遇到的问题，比如在安装lnmp时。
1.1 创建screen会话
可以先执行：screen -S lnmp ，screen就会创建一个名字为lnmp的会话。 VPS侦探 https://www.vpser.net/
1.2 暂时离开，保留screen会话中的任务或程序
当需要临时离开时（会话中的程序不会关闭，仍在运行）可以用快捷键Ctrl+a d(即按住Ctrl，依次再按a,d)
1.3 恢复screen会话
当回来时可以再执行执行：screen -r lnmp 即可恢复到离开前创建的lnmp会话的工作界面。如果忘记了，或者当时没有指定会话名，可以执行：screen -ls screen会列出当前存在的会话列表，如下图：
11791.lnmp即为刚才的screen创建的lnmp会话，目前已经暂时退出了lnmp会话，所以状态为Detached，当使用screen -r lnmp后状态就会变为Attached，11791是这个screen的会话的进程ID，恢复会话时也可以使用：screen -r 11791
1.4 关闭screen的会话
执行：exit 会提示：[screen is terminating]，表示已经成功退出screen会话。VPS侦探 https://www.vpser.net/
2、远程演示 首先演示者先在服务器上执行 screen -S test 创建一个screen会话，观众可以链接到远程服务器上执行screen -x test 观众屏幕上就会出现和演示者同步。
3、常用快捷键
Ctrl+a c ：在当前screen会话中创建窗口 Ctrl+a w ：窗口列表 `Ctrl+a n ：下一个窗口 Ctrl+a p ：上一个窗口 Ctrl+a 0-9 ：在第0个窗口和第9个窗口之间切换 执行：screen -S lnmp 创建screen会话。</description>
    </item>
    <item>
      <title>Linux添加,增加swap交换分区大小虚拟内存</title>
      <link>https://567899.xyz/post/swap/</link>
      <pubDate>Sat, 04 Jul 2015 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/swap/</guid>
      <description>配置低的VPS在运行部分程序时会被killed进程，通常使用swap交换分区，间接给VPS提高一下性能。
VPS添加swap交换分区的方法(只有虚拟化为Xen、KVM、VMWare的VPS可以，OpenVZ不支持添加swap)。
确认是否有SWAP，可以执行
free -m 命令查看，如果有swap一行且total项下不为零的话就是存在swap，就不适合再进行添加swap。
添加SWAP交换分区 以下以添加2GB SWAP为例，生成文件块：（SWAP一般设置为内存的2倍，并非完全以此为标准，只适合4GB以下内存，count后面的数为要设置的swap大小xxMB）
dd if=/dev/zero of=/var/swapfile bs=1M count=2048 创建swap文件
/sbin/mkswap /var/swapfile 激活swap文件
/sbin/swapon /var/swapfile 查看一下swap是否正确：
/sbin/swapon -s 另外为了安全建议执行：
chmod 0600 /var/swapfile 改一下权限
到fstab文件中添加开机自动挂载设置
vi /etc/fstab 在末尾增加以下内容：
/var/swapfile swap swap defaults 0 0 也可以执行如下命令，感觉这样更方便
echo &amp;#34;/var/swapfile swap swap defaults 0 0&amp;#34; &amp;gt;&amp;gt;/etc/fstab SWAP删除方法：
/sbin/swapoff /var/swapfile rm -f /var/swapfile 删掉添加的自动挂载swap的设置
vi /etc/fstab 顺便附上DD命令的参数介绍： dd命令 功能：把指定的输入文件拷贝到指定的输出文件中，并且在拷贝过程中可以进行格式转换。可以用该命令实现DOS下的diskcopy命令的作用。先用dd命令把软盘上的数据写成硬盘的一个寄存文件，再把这个寄存文件写入第二张软盘上，完成diskcopy的功能。需要注意的是，应该将硬盘上的寄存文件用rm命令删除掉。系统默认使用标准输入文件和标准输出文件。 语法：
dd [选项] if =输入文件（或设备名称）。 of =输出文件（或设备名称）。 ibs = bytes 一次读取bytes字节，即读入缓冲区的字节数。 skip = blocks 跳过读入缓冲区开头的ibs*blocks块。 obs = bytes 一次写入bytes字节，即写入缓冲区的字节数。 bs = bytes 同时设置读/写缓冲区的字节数（等于设置ibs和obs）。 cbs = byte 一次转换bytes字节。 count=blocks 只拷贝输入的blocks块。 转载自https://www.</description>
    </item>
    <item>
      <title>nano文本编辑器使用复制剪切粘贴查找替换</title>
      <link>https://567899.xyz/post/nano/</link>
      <pubDate>Thu, 19 Feb 2015 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/nano/</guid>
      <description>安装
CentOS执行
yum -y install nano Debian执行
apt-get install -y nano 新建/打开文件
nano 路径+文件名 如果改文件存在，上面的命令将打开这个文件； 如果文件不存在则将会创建一个新文件并打开。 光标控制
移动光标：使用用方向键移动。 选择文字：按住鼠标左键拖到。 复制、剪贴和粘贴
复制一整行：Alt+6 剪贴一整行：Ctrl+K 粘贴：Ctrl+U 如果需要复制/剪贴多行或者一行中的一部分，先将光标移动到需要复制／剪贴的文本的开头，按Ctrl+6或者Alt+A做标记，然后移动光标到 待复制／剪贴的文本末尾。这时选定的文本会反白，用Alt+6来复制Ctrl+K来剪贴。若在选择文本过程中要取消，只需要再按一次Ctrl+6。
搜索
按Ctrl+W然后输入你要搜索的关键字，回车确定。这将会定位到第一个匹配的文本，接着可以用Alt+W来定位到下一个匹配的文本。
翻页
用Ctrl+Y到上一页，Ctrl+V到下一页
替换文本
按Ctrl+\在编辑器的底部输入要替换的文本回车然后输入替换后的文本内容按A替换所有匹配的文本
保存
使用Ctrl+O来保存所做的修改
退出
按Ctrl+X
如果你修改了文件，下面会询问你是否需要保存修改。输入Y确认保存，输入N不保存，按Ctrl+C取消返回。
如果输入了Y，下一步会让你输入想要保存的文件名。如果不需要修改文件名直接回车就行；若想要保存成别的名字（也就是另存为）则输入新名称然后确 定。这个时候也可用Ctrl+C来取消返回。
获得帮助
进入nano界面后，下面有两行菜单，例如，“^G Get Help”。其意义如下：
^G意味着快捷键是Ctrl+G，“Get Help”当然是功能了。
根据这些提示就可以立刻开始使用nano了，也可以Ctrl+G看看帮助。
Note：nano中，黑底白字表示快捷键操作。其中^表示Ctrl键，则Ctrl+G就表示成^G。M表示 Alt键，则Alt+W表示为M-W。
编辑文件整行文本内容替换
sed -i &amp;#39;s/替换前的整行原文本/替换后的整行文本/&amp;#39; 文件路径 文件路径示范/root/test.txt
修改或替换整个文件
echo &amp;#34;添加的文本内容&amp;#34; &amp;gt; 文件路径 在文件最后增加
echo &amp;#34;添加的文本内容&amp;#34; &amp;gt;&amp;gt; 文件路径 </description>
    </item>
    <item>
      <title>Gmail邮件客户端中SMTP的设置</title>
      <link>https://567899.xyz/post/gmail-smtp/</link>
      <pubDate>Tue, 22 Oct 2013 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/gmail-smtp/</guid>
      <description>启用安全性较低的应用的访问权限 个人邮箱登录google账号输入网址安全性较低的应用的访问权限开启启用【允许安全性较低的应用】即可正常发送邮件。 企业邮箱登录之后，打开网址安全性 查看 具体设置方法 或者 直接打开 允许访问您的 Google 帐号 电子邮件客户端中更改 SMTP 和其他设置 参考链接
接收邮件 (IMAP) 服务器:imap.gmail.com 要求 SSL：是 端口：993 发送邮件 (SMTP) 服务器:smtp.gmail.com 要求 SSL：是 要求 TLS：是（如适用） 使用身份验证：是 SSL 端口：465 TLS/STARTTLS 端口：587 完整名称或显示名称:您的姓名 帐号名、用户名或电子邮件地址:您的完整电子邮件地址 密码:您的 Gmail 密码 </description>
    </item>
  </channel>
</rss>
