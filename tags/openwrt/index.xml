<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Openwrt on Xizi&#39;s Blog</title>
    <link>https://567899.xyz/tags/openwrt/</link>
    <description>Recent content in Openwrt on Xizi&#39;s Blog</description>
    <image>
      <title>Xizi&#39;s Blog</title>
      <url>https://567899.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://567899.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.123.8</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 12 Jan 2020 01:37:56 +0800</lastBuildDate>
    <atom:link href="https://567899.xyz/tags/openwrt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用GitHub Actions云编译OpenWrt</title>
      <link>https://567899.xyz/post/build-openwrt-with-github-actions/</link>
      <pubDate>Sun, 12 Jan 2020 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/build-openwrt-with-github-actions/</guid>
      <description>前言 Github Ac­tions 是 GitHub 推出的持续集成 (Con­tin­u­ous in­te­gra­tion，简称 CI) 服务，它提供了配置非常不错的虚拟服务器环境（E5 2vCPU/​7G RAM），基于它可以进行构建、测试、打包、部署项目。对于公共仓库可免费无时间限制的使用（指累积时间），不过要使用它首先需要知道如何编写 workflow 文件。但这篇文章并不是教你如何枯燥的去编写 work­flow 文件，而是教你如何去使用博主已经编写好的 Open­Wrt 编译方案。
教程更新 2020-02-01 新图文教程 2019-12-10 新增 macOS 编译方案使用说明 2019-12-06 添加 tmate 网页终端链接说明 2019-12-05 优化基础使用教程，添加 @lietxia 大佬的图文教程链接 2019-12-04 新增云menuconfig使用方法 2019-12-03 新增并发编译使用方法 2019-11-30 新增自定义源码编译使用方法 2019-11-14 全网独家首发 方案特点 免费 一键快速编译 定时自动编译 客制化编译 并发编译（可同时进行20+5个编译任务） 无需搭建编译环境（在线make menuconfig生成配置文件) 无需消耗自己的计算机与服务器的计算资源（性感E5在线编译） 无需担心磁盘空间不足（近60G磁盘空间） 无需使用清理文件（内核更新不怕 boom ） 编译速度快（编译时间1-2小时） 编译成功率提升200%（万兆自由网络环境） 全新环境（杜绝编译环境不干净导致编译失败） 本解决方案是一个开放平台，任何人都可以基于此打造自己专属的编译方案。
项目地址 https://github.com/P3TERX/Actions-OpenWrt
支持项目请随手点个 star，让更多的人发现、使用并受益。
准备工作 注册 GitHub 账号 搭建编译环境，用于生成.config文件。(可选) TIPS: 关于编译环境的搭建，推荐去看我之前写的相关文章，Win­dows 10 可以使用 WSL ，ma­cOS、Linux 可以使用 Docker 。</description>
    </item>
    <item>
      <title>VMware Workstation单臂路由配置安装openwrt(LEDE)单网卡国际互联网</title>
      <link>https://567899.xyz/post/router-on-a-stick-vmwareworkstation-openwrt-lede/</link>
      <pubDate>Sun, 28 Oct 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/router-on-a-stick-vmwareworkstation-openwrt-lede/</guid>
      <description>为什么要配置虚拟机环境 出差时，比如udp2raw等个别软件只能在LINUX环境才能使用，而在WIN环境下就没法例用它。
所需要的软件 VMware Workstation 15 Pro 注册码SN:ZY1MK-4UD80-M81VY-RZYNX-Z22X2 StarWind V2V Converter KoolShare 固件 选择普通的就行，不一定非要虚拟机转盘或PE下写盘专用 使用StarWind V2V-Image Converter转换格式 Image format选择Vmware growable image
![](/images/StarWind V2V-Image Converter-1.png)
![](/images/StarWind V2V-Image Converter-2.png)
配置VMware Workstation 开始新建虚拟机，选择稍后安装操作系统
客户机操作系统选择Linx版本其它Linx 4.X或更高版本内核64位
一路默认完成创建,编辑虚拟机设置 删除打印机(可选)，删除原有的硬盘，然后添加硬盘使用现有虚拟磁盘 找到刚才转换好的后缀为.vmdk格式的并使用它。
网络适配器中的网络连接选择桥接模式(B):直接连接物理网络
配置LEDE软路由 配置网络
vi /etc/config/network 这里有2种联网方式
通过上级路由器拨号上网 上级路由器已经设置好了拨号上网。 假设宿主机路由器的网关为10.10.10.1 此时可以删除WAN口(可选)，也可以保留。 上图中上级拨号路由器的IP地址为10.10.10.1虚拟机软路由器的IP地址为10.10.10.11 按实际IP修改
IPV4 网关务必一定要设置成上级路由器的IP地址 IPV4 地址必须要跟上级路由器在同一个网段内 DNS可以设置成公共DNS，也可以使用运营商的。 联网后去酪软中心安装科学上网插件并配置好以后 其它设置，包括本机电脑的只要网关设置成10.10.10.11就能享受国际互联网了。
在虚拟机路由器里拨号上网 待完善中&amp;hellip; &amp;hellip;</description>
    </item>
    <item>
      <title>从零开始编译OpenWRT lean软路由固件教程</title>
      <link>https://567899.xyz/post/openwrt/</link>
      <pubDate>Sun, 26 Aug 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/openwrt/</guid>
      <description>测试系统：ubuntu18.04 lts x64
如何编译自己需要的OpenWrt固件 Lean大雕的地址： https://github.com/coolsnowwolf/lede
注意：
不要用 root 用户 git 和编译！！！ 国内用户编译前最好准备好梯子 默认登陆IP 192.168.1.1, 密码 password 编译命令如下:
首先装好 Ubuntu 64bit，推荐 Ubuntu 14 LTS x64
桌面版本的按CTRL+ALT+T进入终端，更新软件列表，下载安装更新。命令行输入
sudo apt-get update 安装基础环境(占用2GB左右的磁盘)
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint 下载源代码，建立工作目录，进入工作目录
git clone https://github.</description>
    </item>
  </channel>
</rss>
