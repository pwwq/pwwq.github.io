<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Certbot on Xizi&#39;s Blog</title>
    <link>https://567899.xyz/tags/certbot/</link>
    <description>Recent content in Certbot on Xizi&#39;s Blog</description>
    <image>
      <title>Xizi&#39;s Blog</title>
      <url>https://567899.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://567899.xyz/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.123.8</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 22 Sep 2020 16:40:38 +0000</lastBuildDate>
    <atom:link href="https://567899.xyz/tags/certbot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>纯净Linux系统手工配置独角数卡发卡站点环境</title>
      <link>https://567899.xyz/post/dujiaoka/</link>
      <pubDate>Tue, 22 Sep 2020 16:40:38 +0000</pubDate>
      <guid>https://567899.xyz/post/dujiaoka/</guid>
      <description>纯净系统纯手工打造独角数卡发卡站点环境，抛弃各种面板、一键网站环境。
https://github.com/assimon/dujiaoka
支付接口已集成 支付宝当面付 支付宝PC支付 支付宝手机支付 payjs微信扫码. Paysapi(支付宝/微信). 码支付(QQ/支付宝/微信) 微信企业扫码支付 Paypal支付(默认美元) 麻瓜宝数字货币支付 全网易支付支持(针对彩虹版) 基本环境要求 (PHP + PHPCLI) version &amp;gt;= 7.2 Nginx version &amp;gt;= 1.16 MYSQL version &amp;gt;= 5.6 Redis (高性能缓存服务) Supervisor (一个python编写的进程管理服务) Composer (PHP包管理器) Linux/Win (Win下未测试，建议直接Linux) 实测Supervisor不装也是可以运行的
PHP环境要求 星号(*)为必须执行的要求，其他为建议内容
*安装fileinfo扩展 *安装redis扩展 *终端需支持php-cli，测试php -v(版本必须一致) *需要开启的函数：putenv，proc_open，pcntl_signal，pcntl_alarm 安装opcache扩展 网络上各类发卡网站程序，比如ZFAKA、独角数卡环境搭建教程都是基于宝塔面板、LNMP等等环境搭建的教程。
ZFAKA可以在宝塔面板后台一键部署安装，也可以使用Docker版
为什么要手工搭建发卡网站环境
怕有后门(被害妄想症) 近期某某面板强迫用户注册才能使用 享受折腾的乐趣 测试使用环境Debian 10，其它系统可以参考修改搭建。
独角数卡发卡站环境搭建 Nginx、MYSQL的搭建具体教程请点击查看，这里重点只讲独角数卡发卡站环境搭建PHP环境的配置
PHP和一些必要组件的安装 apt -y install php-fpm php-mysql php-redis php-fileinfo php-cli php-gd redis-server php-mbstring php-bcmath php-curl php-xml php-dom 配置PHP组件 配置PHP的redis缓存组件</description>
    </item>
    <item>
      <title>Debian10手动搭建WEB环境Nginx,SSL,PHP,MySQL</title>
      <link>https://567899.xyz/post/debian10-web-nginx-certbot-ssl-php-mysql/</link>
      <pubDate>Thu, 10 Sep 2020 16:40:38 +0000</pubDate>
      <guid>https://567899.xyz/post/debian10-web-nginx-certbot-ssl-php-mysql/</guid>
      <description>手动搭建，使用apt,apt-get快速安装免编译
安装nginx和php
apt update apt install openssl nginx-full php-fpm php-mysql -y 创建站点，新建文件
nano example.com.sh 内容如下
#!/bin/bash # 创建站点目录和默认页面 mkdir /var/www/example.com chown -R www-data:www-data /var/www/example.com echo &amp;#34;hello word&amp;#34; &amp;gt; /var/www/example.com/index.html # 添加nginx配置文件 echo &amp;#34;server { listen 80; listen [::]:80; server_name example.com; root /var/www/example.com; index index.html; # return 301 https://$server_name$request_uri; } &amp;gt;&amp;gt; /etc/nginx/sites-available/default 把example.com替换成自己的域名
sed -i &amp;#39;s/example.com/自己的域名/&amp;#39; example.com.sh 给予权限并执行
chmod +x example.com.sh bash example.com.sh systemctl restart nginx Certbot申请Let’s Encrypt证书SSL，安装Certbot
apt install certbot -y 获取SSL证书</description>
    </item>
    <item>
      <title>Nginx使用官方工具Certbot配置申请Let’s Encrypt安全SSL证书详细教程</title>
      <link>https://567899.xyz/post/debian-ubuntu-nginx-certbot-lets-encrypt-ssl/</link>
      <pubDate>Wed, 21 Nov 2018 01:37:56 +0800</pubDate>
      <guid>https://567899.xyz/post/debian-ubuntu-nginx-certbot-lets-encrypt-ssl/</guid>
      <description>获取Certbot客户端 apt update apt install openssl nginx certbot -y systemctl enable nginx systemctl start nginx 获取SSL证书 certbot certonly --webroot -w /var/www/example -d example.com -d www.example.com 这个命令会为example.com和www.example.com这两个域名生成一个证书，使用--webroot模式会在/var/www/example站点根目录中创建.well-known文件夹，这个文件夹里面包含了一些验证文件，certbot会通过访问example.com/.well-known/acme-challenge来验证你的域名是否绑定的这个服务器。
SSL证书保存路径
/etc/letsencrypt/live/example.com/fullchain.pem /etc/letsencrypt/live/example.com/privkey.pem 自动更新SSL证书 Let’s Encrypt提供的证书只有90天的有效期，certbot运行
certbot renew 自动检查系统内的证书，并且自动更新这些证书。 我们也可以运行certbot renew --dry-run测试一下
或添加一个cron计划19 4 * * 3 root certbot renew意为每周三的00:19执行定时更新SSL证书计划
获取 Certbot 客户端 wget https://dl.eff.org/certbot-auto chmod a+x ./certbot-auto ./certbot-auto --help 配置 nginx 、验证域名所有权 在虚拟主机配置文件（ /etc/nginx/conf.d/xxx.com.conf ）中添加如下内容，这一步是为了通过 Let’s Encrypt 的验证，验证 linuxstory.org 这个域名是属于我的管理之下。（具体解释可见下一章“一些补充说明”的“ certbot 的两种工作方式”）
location ^~ /.</description>
    </item>
  </channel>
</rss>
